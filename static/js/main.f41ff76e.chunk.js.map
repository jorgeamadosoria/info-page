{"version":3,"sources":["data/enums/EntryType.tsx","data/enums/SocialType.tsx","data/enums/ShowCaseType.tsx","data/enums/IconColor.tsx","data/enums/Relevance.tsx","components/resumes/ResumeUtils.tsx","components/resumes/FlatResume/FlatResume.tsx","components/resumes/ColorfulResume/ColorfulResume.tsx","components/resumes/CompactResume/CompactResume.tsx","data/enums/LanguageLevel.tsx","data/Language.tsx","data/enums/SkillType.tsx","components/resumes/LeftRailResume/LeftRailResume.tsx","components/Header/Header.tsx","data/Contact.tsx","data/Skill.tsx","data/Datum.tsx","data/Entry.tsx","data/Showcase.tsx","data/Resume.tsx","components/pdf/PDFUtils.tsx","components/pdf/CompactResumePDF.tsx","components/pdf/ColorfulResumePDF.tsx","components/pdf/FlatResumePDF.tsx","components/pdf/LeftRailResumePDF.tsx","components/About/About.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["EntryType","SocialType","ShowCaseType","isSocialType","value","GITHUB","FACEBOOK","LINKEDIN","OTHER","getSocialType","IconColor","Relevance","getIcon","name","color","BLACK","icon","faMapMarkerAlt","COLOR","size","fixedWidth","faWhatsapp","faEnvelope","faBriefcase","WEB","faGlobe","APP","faMobileAlt","faGithub","faFacebook","faLinkedin","WORK","EDUCATION","faGraduationCap","VOLUNTEERING","faHandsHelping","CERTIFICATION","faCertificate","FlatResume","resume","relevance","prepareResume","positions","summary","showcase","contacts","languages","skills","entries","joinedPositions","map","position","join","Container","fluid","Row","className","Col","xs","Card","Subtitle","xl","sm","md","contact","index","url","target","href","type","ListGroup","variant","language","Item","code","level","skill","lg","entry","refText","reference","Date","fromDate","toLocaleDateString","toDate","concat","entity","description","show","Header","Title","Body","Footer","ColorfulResume","Badge","pill","shortLevel","ContactEntry","title","CertificationEntry","StandardEntry","CompactResume","LanguageLevel","getRelevance","ESSENTIAL","STANDARD","TRIVIAL","compare","e1","e2","Language","json","this","NATIVE","PROFICIENT","INTERMEDIATE","BEGINNER","BASIC","getLanguageLevel","substring","indexOf","trim","levelNumber","sort","SkillType","LeftRailResume","WHITE","ProgressBar","now","format","Navbar","fixed","bg","expand","Brand","process","Toggle","aria-controls","Collapse","Nav","NavDropdown","faFirstdraft","id","to","faFilePdf","Link","faInfoCircle","Contact","Skill","PRO","getSkillType","Datum","Entry","filter","clear","replace","getEntryType","getTime","Math","sign","Showcase","getShowCaseType","Resume","Array","e","filterRelevance","bgEnum","path","fill","d","width","height","viewBox","top","left","backgroundColor","b","borderColor","border","bb","borderBottomColor","borderBottomWidth","bl","borderLeftColor","borderLeftWidth","round","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","rRight","pos","h","w","z","zIndex","p","padding","pt","paddingTop","pl","paddingLeft","pr","paddingRight","pb","paddingBottom","mb","marginBottom","mt","marginTop","mr","marginRight","fontSize","ml","marginLeft","styles","Object","assign","StyleSheet","create","flexRow","flexDirection","flexGrow","flexWrap","alignFlexStart","alignContent","justifySpaceBetween","justifyContent","CompactResumePDF","style","alignItems","src","sectionSkillContainer","wrap","ColorfulResumePDF","render","pageNumber","FlatResumePDF","borderTopColor","borderTopWidth","LeftRailResumePDF","About","useState","template","templateState","setTemplateState","useEffect","fetch","then","response","ok","Error","statusText","catch","error","console","log","Tabs","defaultActiveKey","Tab","eventKey","tabClassName","alt","Text","Table","striped","bordered","hover","values","data","App","props","resumeState","setResumeState","basename","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f41ff76e.chunk.js","sourcesContent":["enum EntryType {\n  WORK = \"work\",\n  EDUCATION = \"education\",\n  VOLUNTEERING = \"volunteering\",\n  CERTIFICATION = \"certification\",\n  OTHER = \"other\",\n}\n\nexport const getEntryType = (value: string) => {\n  switch (value) {\n    case \"work\":\n      return EntryType.WORK;\n    case \"education\":\n      return EntryType.EDUCATION;\n    case \"volunteering\":\n      return EntryType.VOLUNTEERING;\n    case \"certification\":\n      return EntryType.CERTIFICATION;\n  }\n  return EntryType.OTHER;\n};\n\nexport default EntryType;\n","enum SocialType {\n  GITHUB = \"github\",\n  FACEBOOK = \"facebook\",\n  LINKEDIN = \"linkedin\",\n  OTHER = \"other\",\n}\n\nexport const getSocialType = (value: string) => {\n  switch (value) {\n    case \"github\":\n      return SocialType.GITHUB;\n    case \"facebook\":\n      return SocialType.FACEBOOK;\n    case \"linkedin\":\n      return SocialType.LINKEDIN;\n  }\n  return SocialType.OTHER;\n};\n\nexport const isSocialType = (value: string): boolean => {\n  return getSocialType(value) !== SocialType.OTHER;\n};\n\nexport default SocialType;\n","enum ShowCaseType {\n  WEB = \"web\",\n  APP = \"app\",\n  OTHER = \"other\",\n}\n\nexport const getShowCaseType = (value: string) => {\n  switch (value) {\n    case \"web\":\n      return ShowCaseType.WEB;\n    case \"app\":\n      return ShowCaseType.APP;\n  }\n  return ShowCaseType.OTHER;\n};\n\nexport default ShowCaseType;\n","export enum IconColor {\n  BLACK = \"black\",\n  WHITE = \"white\",\n  COLOR = \"color\",\n}\n\nexport default IconColor;\n","enum Relevance {\n  ESSENTIAL = \"essential\",\n  STANDARD = \"standard\",\n  TRIVIAL = \"trivial\",\n}\n\nexport const getRelevance = (value: string) => {\n  switch (value) {\n    case \"essential\":\n      return Relevance.ESSENTIAL;\n    case \"standard\":\n      return Relevance.STANDARD;\n    default:\n      return Relevance.TRIVIAL;\n  }\n};\n\nexport const compare = (e1: Relevance, e2: Relevance) => {\n  var value = (value: Relevance) => {\n    switch (value) {\n      case Relevance.ESSENTIAL:\n        return 1;\n      case \"standard\":\n        return 2;\n      default:\n        return 3;\n    }\n  };\n  return value(e1) <= value(e2);\n};\n\nexport default Relevance;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faFacebook,\n  faGithub,\n  faLinkedin,\n  faWhatsapp,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport {\n  faBriefcase,\n  faCertificate,\n  faEnvelope,\n  faGlobe,\n  faGraduationCap,\n  faHandsHelping,\n  faMapMarkerAlt,\n  faMobileAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Relevance from \"../../data/enums/Relevance\";\nimport Resume from \"../../data/Resume\";\nimport SocialType from \"../../data/enums/SocialType\";\nimport EntryType from \"../../data/enums/EntryType\";\nimport ShowCaseType from \"../../data/enums/ShowCaseType\";\nimport IconColor from \"../../data/enums/IconColor\";\n\nexport type ResumeProps = {\n  resume: Resume;\n  relevance: Relevance;\n  format?: string;\n};\n\nexport const getIcon = (name: String, color: IconColor = IconColor.BLACK) => {\n  switch (name) {\n    case \"residence\":\n      return (\n        <FontAwesomeIcon\n          icon={faMapMarkerAlt}\n          color={color === IconColor.COLOR ? \"#ea4335\" : color}\n          size=\"lg\"\n          fixedWidth\n        />\n      );\n    case \"phone\":\n      return (\n        <FontAwesomeIcon\n          icon={faWhatsapp}\n          color={color === IconColor.COLOR ? \"#25d366\" : color}\n          size=\"lg\"\n          fixedWidth\n        />\n      );\n    case \"email\":\n      return (\n        <FontAwesomeIcon\n          icon={faEnvelope}\n          color={color === IconColor.COLOR ? \"#ffa930\" : color}\n          size=\"lg\"\n          fixedWidth\n        />\n      );\n    case \"portfolio\":\n      return (\n        <FontAwesomeIcon\n          icon={faBriefcase}\n          color={color === IconColor.COLOR ? \"#601700\" : color}\n          size=\"lg\"\n          fixedWidth\n        />\n      );\n    case ShowCaseType.WEB:\n      return (\n        <FontAwesomeIcon\n          icon={faGlobe}\n          color={color === IconColor.COLOR ? \"#601700\" : color}\n          size=\"lg\"\n          fixedWidth\n        />\n      );\n    case ShowCaseType.APP:\n      return (\n        <FontAwesomeIcon\n          icon={faMobileAlt}\n          color={color === IconColor.COLOR ? \"#601700\" : color}\n          size=\"lg\"\n          fixedWidth\n        />\n      );\n    case SocialType.GITHUB:\n      return (\n        <FontAwesomeIcon\n          icon={faGithub}\n          color={color === IconColor.COLOR ? \"#333\" : color}\n          size=\"lg\"\n          fixedWidth\n        />\n      );\n    case SocialType.FACEBOOK:\n      return (\n        <FontAwesomeIcon\n          icon={faFacebook}\n          color={color === IconColor.COLOR ? \"#3b5998\" : color}\n          size=\"lg\"\n          fixedWidth\n        />\n      );\n    case SocialType.LINKEDIN:\n      return (\n        <FontAwesomeIcon\n          icon={faLinkedin}\n          color={color === IconColor.COLOR ? \"#00a0dc\" : color}\n          size=\"lg\"\n          fixedWidth\n        />\n      );\n    case EntryType.WORK:\n      return (\n        <FontAwesomeIcon\n          icon={faBriefcase}\n          color={color === IconColor.COLOR ? \"#7094F9\" : color}\n          size=\"lg\"\n          fixedWidth\n        />\n      );\n    case EntryType.EDUCATION:\n      return (\n        <FontAwesomeIcon\n          icon={faGraduationCap}\n          color={color === IconColor.COLOR ? \"#93B8AD\" : color}\n          size=\"lg\"\n          fixedWidth\n        />\n      );\n    case EntryType.VOLUNTEERING:\n      return (\n        <FontAwesomeIcon\n          icon={faHandsHelping}\n          color={color === IconColor.COLOR ? \"#F4626C\" : color}\n          size=\"lg\"\n          fixedWidth\n        />\n      );\n    case EntryType.CERTIFICATION:\n      return (\n        <FontAwesomeIcon\n          icon={faCertificate}\n          color={color === IconColor.COLOR ? \"#FFA25B\" : color}\n          size=\"lg\"\n          fixedWidth\n        />\n      );\n  }\n};\n","import React from \"react\";\nimport \"./FlatResume.css\";\nimport { Container, Row, Col, Card, ListGroup } from \"react-bootstrap\";\nimport EntryType from \"../../../data/enums/EntryType\";\nimport { getIcon, ResumeProps } from \"../ResumeUtils\";\n\nconst FlatResume = ({ resume, relevance }: ResumeProps) => {\n  const {\n    name,\n    positions,\n    summary,\n    showcase,\n    contacts,\n    languages,\n    skills,\n    entries,\n  } = resume.prepareResume(relevance);\n  const joinedPositions = positions\n    .map((position) => position.value)\n    .join(\", \");\n\n  return (\n    <Container fluid>\n      <Row className=\"pt-2\">\n        <Col xs={12}>\n          <h3>{name.value}</h3>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            <i>{joinedPositions}</i>\n          </Card.Subtitle>\n          <hr />\n        </Col>\n      </Row>\n      <Row className=\"pt-2\">\n        <Col className=\"pl-3 pr-1\" xs={12} xl={4}>\n          {summary.value}\n        </Col>\n        <Col xs={12} className=\"d-xl-none\">\n          <hr />\n        </Col>\n        <Col\n          className=\"flat-left-border mt-1 mb-1\"\n          xs={12}\n          sm={12}\n          md={8}\n          xl={5}\n        >\n          <Row className=\"pl-2 \">\n            {contacts.map((contact, index) => (\n              <Col xs={12} sm={6} className=\"p-1 text-truncate \" key={index}>\n                {contact.url && (\n                  <a className=\"text-dark\" target=\"blank\" href={contact.url}>\n                    {getIcon(contact.type)} &nbsp;\n                    <span className=\"text-break\">{contact.name}</span>\n                  </a>\n                )}\n                {!contact.url && (\n                  <>\n                    {getIcon(contact.type)} &nbsp;\n                    <span className=\"text-break\">{contact.name}</span>\n                  </>\n                )}\n              </Col>\n            ))}\n          </Row>\n        </Col>\n        <Col xs={12} className=\"d-md-none\">\n          <hr />\n        </Col>\n        <Col className=\"pl-3 pr-1 flat-left-border-md\" xs={12} md={4} xl={3}>\n          <ListGroup variant=\"flush\">\n            {languages.map((language, index) => (\n              <ListGroup.Item\n                className=\"p-0 text-truncate border-bottom-0 \"\n                key={index}\n              >\n                {language.code}&nbsp;&nbsp;\n                <i>{language.level}</i>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        </Col>\n      </Row>\n      <Row>\n        <Col xs={12}>\n          <hr />\n        </Col>\n        {skills.map((skill, index) => (\n          <Col\n            className=\"text-truncate\"\n            xs={12}\n            sm={6}\n            md={4}\n            lg={2}\n            key={index}\n          >\n            <b>{skill.name}</b>\n            &nbsp;<i>({skill.level})</i>\n          </Col>\n        ))}\n      </Row>\n      <Row>\n        <Col xs={12}>\n          <hr />\n        </Col>\n      </Row>\n      {entries.map((entry, index) => {\n        const refText =\n          entry.type !== EntryType.CERTIFICATION ? entry.reference.value : null;\n\n        return (\n          <Row key={index} className=\"ml-3\">\n            <Col\n              xs={12}\n              className=\"pb-0 border border-dark border-bottom-0 border-top-0 border-right-0\"\n            >\n              <div className=\"position-relative mx-auto flat-timeline-icon border p-1 pt-2 pb-2 border-dark\">\n                {getIcon(entry.type)}\n              </div>\n\n              <p className=\"mt-2\">\n                {new Date(entry.fromDate).toLocaleDateString()}\n                {entry.toDate &&\n                  \" -> \".concat(new Date(entry.toDate).toLocaleDateString())}\n              </p>\n              <p className=\"pl-4 ml-3\">\n                {entry.name}&nbsp;@&nbsp;\n                {refText && (\n                  <a\n                    className=\"text-dark\"\n                    target=\"blank\"\n                    href={entry.reference.value}\n                  >\n                    {entry.entity}\n                  </a>\n                )}\n                {!refText && (\n                  <>\n                    {entry.entity}\n                    &nbsp;&nbsp;\n                    <a\n                      className=\"text-dark\"\n                      target=\"blank\"\n                      href={entry.reference.value}\n                    >\n                      (Reference)\n                    </a>\n                  </>\n                )}\n              </p>\n              <p className=\"pl-4 ml-3 \">{entry.description.value}</p>\n            </Col>\n            <Col\n              className=\"pb-0 border border-dark border-bottom-0 border-top-0 border-right-0\"\n              xs={2}\n            ></Col>\n            <Col xs={8}>\n              <hr />\n            </Col>\n            <Col xs={2}></Col>\n          </Row>\n        );\n      })}\n      <Row className=\"pl-3 pr-1 \">\n        <Col xs={12}>\n          <hr />\n        </Col>\n        <Col xs={12} className=\"p-1 d-flex border-0\">\n          <Row>\n            {showcase.map((show, index) => (\n              <Col\n                sm={12}\n                md={6}\n                lg={4}\n                xl={3}\n                className=\"p-1 border-0 flex-1\"\n                key={index}\n              >\n                <a target=\"blank\" className=\"text-dark\" href={show.url}>\n                  <Card className=\"h-100\">\n                    <Card.Header>\n                      <Card.Title className=\"m-0 p-0\">\n                        {getIcon(show.type)}&nbsp;\n                        <span className=\"fs-4\">{show.name}</span>\n                      </Card.Title>\n                    </Card.Header>\n                    <Card.Body>{show.description}</Card.Body>\n                    <Card.Footer className=\"d-flex align-items-end flex-grow-0 flex-shrink-1\">\n                      <span className=\"small\">{show.language}</span>\n                    </Card.Footer>\n                  </Card>\n                </a>\n              </Col>\n            ))}\n          </Row>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default FlatResume;\n","import React from \"react\";\nimport \"./ColorfulResume.css\";\nimport { Container, Row, Col, Card, ListGroup, Badge } from \"react-bootstrap\";\nimport EntryType from \"../../../data/enums/EntryType\";\nimport { ResumeProps, getIcon } from \"../ResumeUtils\";\nimport IconColor from \"../../../data/enums/IconColor\";\n\nconst ColorfulResume = ({ resume, relevance }: ResumeProps) => {\n  const {\n    name,\n    positions,\n    summary,\n    showcase,\n    contacts,\n    languages,\n    skills,\n    entries,\n  } = resume.prepareResume(relevance);\n  const joinedPositions = positions\n    .map((position) => position.value)\n    .join(\", \");\n\n  return (\n    <Container fluid>\n      <Row className=\"pt-2\">\n        <Col xs={12}>\n          <h3>{name.value}</h3>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            <i>{joinedPositions}</i>\n          </Card.Subtitle>\n          <hr />\n        </Col>\n      </Row>\n      <Row className=\"pt-2\">\n        <Col className=\"pl-3 pr-1\" xs={12} sm={12} md={12} xl={4}>\n          <p>{summary.value}</p>\n        </Col>\n        <Col className=\"pl-xl-3 pr-xl-0\" xs={12} lg={8} xl={5}>\n          <Row className=\"pl-2 pl-xl-0\">\n            {contacts.map((contact, index) => (\n              <Col\n                xs={6}\n                md={4}\n                lg={6}\n                className=\"p-1 p-xl-0 pt-xl-1 pb-xl-1 border-0\"\n                key={index}\n              >\n                <p className=\"text-break\">\n                  {contact.url && (\n                    <a className=\"text-dark\" target=\"blank\" href={contact.url}>\n                      {getIcon(contact.type, IconColor.COLOR)} &nbsp;\n                      <span className=\"text-break\">{contact.name}</span>\n                    </a>\n                  )}\n                  {!contact.url && (\n                    <>\n                      {getIcon(contact.type, IconColor.COLOR)} &nbsp;\n                      <span className=\"text-break\">{contact.name}</span>\n                    </>\n                  )}\n                </p>\n              </Col>\n            ))}\n          </Row>\n        </Col>\n        <Col xs={12} lg={3}>\n          <Row>\n            {languages.map((language, index) => (\n              <Col\n                xs={6}\n                sm={6}\n                md={4}\n                lg={12}\n                className=\"pb-lg-1 pt-lg-1 border-0\"\n                key={index}\n              >\n                <p className=\"text-break\">\n                  <Badge\n                    pill\n                    variant=\"secondary\"\n                    className={\"w-100 colorful-\" + language.shortLevel}\n                  >\n                    {language.code}&nbsp;&nbsp;\n                    <i>{language.level}</i>\n                  </Badge>\n                </p>\n              </Col>\n            ))}\n          </Row>\n        </Col>\n      </Row>\n      <Row>\n        <Col xs={12}>\n          <hr />\n        </Col>\n        {skills.map((skill, index) => (\n          <Col xs={6} sm={6} md={4} lg={3} xl={2} key={index}>\n            <Badge pill className={\"w-100 colorful-skill-\" + skill.level}>\n              <b>\n                {skill.name}\n                &nbsp;<i>({skill.level})</i>\n              </b>\n            </Badge>\n          </Col>\n        ))}\n      </Row>\n      <Row className=\"pb-3\">\n        <Col xs={12}>\n          <hr />\n        </Col>\n      </Row>\n      {entries.map((entry, index) => {\n        const refText =\n          entry.type !== EntryType.CERTIFICATION ? entry.reference.value : null;\n\n        return (\n          <Row key={index} className=\"ml-3\">\n            <Col\n              xs={12}\n              className={\n                \"colorful-\" +\n                entry.type +\n                \" pb-0 border border-dark border-right-0 border-bottom-0 border-top-0 colorful-entry\"\n              }\n            >\n              <div\n                className={\n                  \"colorful-\" +\n                  entry.type +\n                  \" mx-auto colorful-timeline-icon border p-2 ml-3 pt-2 pb-2 border-dark d-inline-flex\"\n                }\n              >\n                {getIcon(entry.type, IconColor.COLOR)}\n              </div>\n              <p\n                className={\n                  \"colorful-\" +\n                  entry.type +\n                  \" h5 colorful-entry-header border border-left-0 border-dark pl-3 d-inline-flex\"\n                }\n              >\n                &nbsp;&nbsp;&nbsp;&nbsp;\n                {entry.fromDate.toLocaleDateString()}\n                {entry.toDate &&\n                  \" to \".concat(entry.toDate.toLocaleDateString())}\n                &nbsp;&nbsp;\n              </p>\n              <p className=\"h6 pl-4 ml-3\">\n                {entry.name}&nbsp;@&nbsp;\n                {refText ? (\n                  <a\n                    className=\"text-reset\"\n                    target=\"blank\"\n                    href={entry.reference.value}\n                  >\n                    {entry.entity}&nbsp;\n                  </a>\n                ) : (\n                  <>\n                    {entry.entity}\n                    &nbsp;&nbsp;\n                  </>\n                )}\n                {!refText && (\n                  <>\n                    <a\n                      className=\"colorfulreference\"\n                      target=\"blank\"\n                      href={entry.reference.value}\n                    >\n                      Reference\n                    </a>\n                  </>\n                )}\n              </p>\n              <p className=\"pl-4 ml-3\">{entry.description.value}</p>\n            </Col>\n            <Col\n              className=\" pb-0 pt-3 pb-3 border border-dark border-bottom-0 border-top-0 border-right-0\"\n              xs={12}\n            ></Col>\n          </Row>\n        );\n      })}\n      <Row className=\"pl-3 pr-1 \">\n        <Col xs={12}>\n          <hr />\n        </Col>\n        <Col xs={12} className=\"p-1 d-flex border-0\">\n          <Row>\n            {showcase.map((show, index) => (\n              <Col\n                sm={6}\n                md={6}\n                lg={4}\n                xl={3}\n                className=\"p-1 border-0 flex-1\"\n                key={index}\n              >\n                <a target=\"blank\" className=\"text-dark\" href={show.url}>\n                  <Card className=\"colorful-portfolio-border h-100\">\n                    <Card.Header className=\"colorful-portfolio-bg\">\n                      <Card.Title className=\"m-0\">\n                        {getIcon(show.type, IconColor.COLOR)}&nbsp;\n                        <span className=\"fs-4\">{show.name}</span>\n                      </Card.Title>\n                    </Card.Header>\n                    <Card.Body>{show.description}</Card.Body>\n                    <Card.Footer className=\"colorful-portfolio-bg d-flex align-items-end flex-grow-0 flex-shrink-1\">\n                      <span className=\"small\">{show.language}</span>\n                    </Card.Footer>\n                  </Card>\n                </a>\n              </Col>\n            ))}\n          </Row>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default ColorfulResume;\n","import React from \"react\";\nimport \"./CompactResume.css\";\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\nimport EntryType from \"../../../data/enums/EntryType\";\nimport { getIcon, ResumeProps } from \"../ResumeUtils\";\nimport Entry from \"../../../data/Entry\";\nimport Contact from \"../../../data/Contact\";\n\nconst CompactResume = ({ resume, relevance }: ResumeProps) => {\n  const {\n    name,\n    positions,\n    summary,\n    showcase,\n    contacts,\n    languages,\n    skills,\n    entries,\n  } = resume.prepareResume(relevance);\n  const joinedPositions = positions\n    .map((position) => position.value)\n    .join(\", \");\n  return (\n    <Container fluid>\n      <Row className=\"ml-1 pt-2\">\n        <Col xs={12}>\n          <h3>{name.value}</h3>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            <i>{joinedPositions}</i>\n          </Card.Subtitle>\n          <hr />\n        </Col>\n      </Row>\n      <Row className=\"pt-2\">\n        <Col xs={6}>\n          <Col className=\"ml-1 pl-3 pr-1\" xs={12}>\n            <Card.Subtitle className=\"mb-2 text-muted\">Summary</Card.Subtitle>\n          </Col>\n          <Col className=\"ml-1 pl-3 pr-1 mb-2\" xs={12}>\n            {summary.value}\n          </Col>\n          <Col className=\"ml-1 pl-3 pr-1\" xs={12}>\n            <Card.Subtitle className=\"mb-2 mt-2 text-muted\">\n              <hr />\n              Contacts\n            </Card.Subtitle>\n          </Col>\n          <Col xs={12}>\n            <Row className=\"pl-3 pr-1 \">\n              {contacts.map((contact, index) => (\n                <Col xs={12} className=\"p-1 border-0\" key={index}>\n                  <ContactEntry contact={contact} />\n                </Col>\n              ))}\n            </Row>\n          </Col>\n          <Col className=\"ml-1 pl-3 pr-1\" xs={12}>\n            <Card.Subtitle className=\"mb-3 mt-3 text-muted\">\n              <hr />\n              Languages\n            </Card.Subtitle>\n          </Col>\n          <Col xs={12}>\n            {languages.map((language, index) => (\n              <div className=\"pl-1 d-inline-flex\" key={index}>\n                <b>{language.code}</b>&nbsp;\n                <i className=\"d-none d-sm-block\">{language.level}</i>\n              </div>\n            ))}\n          </Col>\n          <Col className=\"ml-1 pl-3 pr-1\" xs={12}>\n            <Card.Subtitle className=\"mb-3 mt-3 text-muted\">\n              <hr />\n              Skills\n            </Card.Subtitle>\n          </Col>\n          <Col xs={12}>\n            {skills.map((skill, index) => (\n              <div className=\"pl-1 d-inline-flex\" key={index}>\n                <b>{skill.name}</b>\n                &nbsp;<i>({skill.level})</i>\n              </div>\n            ))}\n          </Col>\n          <Col className=\"ml-1 pl-3 pr-1\" xs={12}>\n            <Card.Subtitle className=\"mb-3 mt-3 text-muted\">\n              <hr />\n              Portfolio\n            </Card.Subtitle>\n          </Col>\n          <Col xs={12} className=\"ml-1 pl-3\">\n            {showcase.map((show, index) => (\n              <div\n                className=\"pr-1 border-top-0 border-bottom-0 d-inline-flex\"\n                key={index}\n              >\n                {getIcon(show.type)}\n                <a target=\"blank\" className=\"ml-1 text-dark\" href={show.url}>\n                  {show.name}\n                </a>\n              </div>\n            ))}\n          </Col>\n        </Col>\n        <Col xs={6}>\n          <Col className=\"ml-1 pl-3 pr-1\" xs={12}>\n            <Card.Subtitle className=\"mb-2 text-muted\">Timeline</Card.Subtitle>\n          </Col>\n          {entries.map((entry, index) => {\n            return (\n              <Row key={index} className=\"ml-3\">\n                <Col\n                  xs={12}\n                  className=\"pb-0 border border-dark border-bottom-0 border-top-0 border-right-0\"\n                >\n                  <div className=\"position-relative mx-auto flat-timeline-icon border p-1 pt-2 pb-2 border-dark\">\n                    {getIcon(entry.type)}\n                  </div>\n\n                  <p className=\"mt-2\">\n                    {new Date(entry.fromDate).toLocaleDateString()}\n                    {entry.toDate &&\n                      \" -> \".concat(\n                        new Date(entry.toDate).toLocaleDateString()\n                      )}\n                  </p>\n                  <p className=\"pl-4 ml-3\">\n                    {entry.name}&nbsp;@&nbsp;\n                    {entry.type !== EntryType.CERTIFICATION ? (\n                      <StandardEntry entry={entry} />\n                    ) : (\n                      <CertificationEntry entry={entry} />\n                    )}\n                  </p>\n                  <p className=\"pl-4\">{entry.description.value}</p>\n                </Col>\n                <Col\n                  className=\"pb-0 border border-dark border-bottom-0 border-top-0 border-right-0\"\n                  xs={2}\n                ></Col>\n                <Col xs={8}>\n                  <hr />\n                </Col>\n                <Col xs={2}></Col>\n              </Row>\n            );\n          })}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\ntype ContactProps = {\n  contact: Contact;\n};\n\nconst ContactEntry = ({ contact }: ContactProps) => {\n  return (\n    contact && (\n      <p className=\"m-0 text-truncate\">\n        <a\n          title={contact.name}\n          className=\"text-dark\"\n          target=\"blank\"\n          href={contact.url ? contact.url : \"#\"}\n        >\n          {getIcon(contact.type)}&nbsp;\n          <span className=\"text-break\">{contact.name}</span>\n        </a>\n      </p>\n    )\n  );\n};\n\ntype EntryLinkProps = {\n  entry: Entry;\n};\nconst CertificationEntry = ({ entry }: EntryLinkProps) => {\n  return (\n    <>\n      {entry.entity}\n      &nbsp;&nbsp;\n      {entry.reference.value && (\n        <a className=\"text-dark\" target=\"blank\" href={entry.reference.value}>\n          Reference\n        </a>\n      )}\n    </>\n  );\n};\n\nconst StandardEntry = ({ entry }: EntryLinkProps) => {\n  return (\n    <>\n      {entry.reference.value ? (\n        <a className=\"text-dark\" target=\"blank\" href={entry.reference.value}>\n          {entry.entity}\n        </a>\n      ) : (\n        entry.entity\n      )}\n    </>\n  );\n};\n\nexport default CompactResume;\n","enum LanguageLevel {\n  NATIVE = \"native (CEFR C2+)\",\n  PROFICIENT = \"proficient (CEFR C1-C2)\",\n  INTERMEDIATE = \"conversational (CEFR (B1-B2)\",\n  BEGINNER = \"beginner (CEFR A2)\",\n  BASIC = \"basic (CEFR A1)\",\n  OTHER = \"other\",\n}\n\nexport const getLanguageLevel = (value: string) => {\n  switch (value) {\n    case \"native\":\n      return LanguageLevel.NATIVE;\n    case \"proficient\":\n      return LanguageLevel.PROFICIENT;\n    case \"intermediate\":\n      return LanguageLevel.INTERMEDIATE;\n    case \"beginner\":\n      return LanguageLevel.BEGINNER;\n    case \"basic\":\n      return LanguageLevel.BASIC;\n  }\n  return LanguageLevel.OTHER;\n};\n\nexport default LanguageLevel;\n","import Relevance, { getRelevance } from \"./enums/Relevance\";\nimport LanguageLevel, { getLanguageLevel } from \"./enums/LanguageLevel\";\nclass Language {\n  code: string = \"\";\n  shortLevel: string = \"\";\n  level: LanguageLevel = LanguageLevel.OTHER;\n  relevance: Relevance = Relevance.TRIVIAL;\n  constructor(json: any) {\n    if (json) {\n      this.code = json.code;\n      this.level = getLanguageLevel(json.level);\n      this.shortLevel = this.level.substring(0, this.level.indexOf(\"(\")).trim();\n      this.relevance = getRelevance(json.relevance);\n    }\n  }\n\n  public static levelNumber = (level: LanguageLevel) => {\n    switch (level) {\n      case LanguageLevel.NATIVE:\n        return 5;\n      case LanguageLevel.PROFICIENT:\n        return 4;\n      case LanguageLevel.INTERMEDIATE:\n        return 3;\n      case LanguageLevel.BEGINNER:\n        return 2;\n      case LanguageLevel.BASIC:\n        return 1;\n      default:\n        return 0;\n    }\n  };\n  static sort = (e1: Language, e2: Language): number => {\n    return Language.levelNumber(e2.level) - Language.levelNumber(e1.level);\n  };\n}\n\nexport default Language;\n","enum SkillType {\n  PRO = \"senior\",\n  INTERMEDIATE = \"intermediate\",\n  BEGINNER = \"junior\",\n  OTHER = \"other\",\n}\n\nexport const getSkillType = (value: string) => {\n  switch (value) {\n    case \"senior\":\n      return SkillType.PRO;\n    case \"intermediate\":\n      return SkillType.INTERMEDIATE;\n    case \"junior\":\n      return SkillType.BEGINNER;\n  }\n  return SkillType.OTHER;\n};\n\nexport default SkillType;\n","import React from \"react\";\nimport \"./LeftRailResume.css\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  ListGroup,\n  ProgressBar,\n} from \"react-bootstrap\";\nimport EntryType from \"../../../data/enums/EntryType\";\nimport { getIcon, ResumeProps } from \"../ResumeUtils\";\nimport Language from \"../../../data/Language\";\nimport IconColor from \"../../../data/enums/IconColor\";\nconst LeftRailResume = ({ resume, relevance }: ResumeProps) => {\n  const {\n    name,\n    positions,\n    summary,\n    showcase,\n    contacts,\n    languages,\n    skills,\n    entries,\n  } = resume.prepareResume(relevance);\n  const joinedPositions = positions\n    .map((position) => position.value)\n    .join(\", \");\n\n  return (\n    <Container\n      fluid\n      className=\"mt-4 leftrail-rounded bg-secondary border border-secondary\"\n    >\n      <Row>\n        <Col xs={4} className=\"p-0 text-light\">\n          <h2 className=\"ml-4 mt-2\">{name.value}</h2>\n          <Card.Subtitle className=\"ml-4 mb-2\">\n            <i>{joinedPositions}</i>\n          </Card.Subtitle>\n          <div className=\"h3 pl-4 bg-dark text-truncate \">Personal Info</div>\n          <ListGroup variant=\"flush\">\n            {contacts.map((contact, index) => (\n              <ListGroup.Item\n                className=\"ml-2 bg-secondary text-light border-0\"\n                key={index}\n              >\n                <p className=\"m-0 text-truncate\">\n                  <a\n                    title={contact.name}\n                    className=\"text-light\"\n                    target=\"blank\"\n                    href={contact.url ? contact.url : \"#\"}\n                  >\n                    {getIcon(contact.type, IconColor.WHITE)} &nbsp;&nbsp;&nbsp;\n                    <span className=\"text-break\">{contact.name}</span>\n                  </a>\n                </p>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n          <div className=\"h3 pl-4 bg-dark text-truncate \">Languages</div>\n          <ListGroup variant=\"flush\">\n            {languages.map((language, index) => (\n              <ListGroup.Item\n                className=\"ml-2 bg-secondary text-truncate text-light border-0\"\n                key={index}\n              >\n                <b>{language.code}</b>&nbsp;&nbsp;\n                <i>{language.level}</i>\n                <ProgressBar\n                  className=\"mt-1\"\n                  now={Language.levelNumber(language.level) * 20}\n                />\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n          <div className=\"h3 pl-4 bg-dark text-truncate \">Skills</div>\n          <ListGroup variant=\"flush\">\n            {skills.map((skill, index) => (\n              <ListGroup.Item\n                className=\"ml-2 text-truncate bg-secondary text-light border-0 \"\n                key={index}\n              >\n                <b>{skill.name}</b>\n                &nbsp;<i>({skill.level})</i>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n          <div className=\"h3 pl-4 bg-dark text-truncate \">Portfolio</div>\n          <ListGroup variant=\"flush\">\n            {showcase.map((show, index) => (\n              <ListGroup.Item\n                className=\"ml-2 bg-secondary text-light border-0\"\n                key={index}\n              >\n                <a className=\"text-light\" target=\"blank\" href={show.url}>\n                  <span>{getIcon(show.type, IconColor.WHITE)}</span>{\" \"}\n                  &nbsp;&nbsp;&nbsp;\n                  <span className=\"text-break\">{show.name}</span>\n                </a>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        </Col>\n        <Col xs={8} className=\"pt-2 leftrail-rounded-right bg-light\">\n          {summary.value}\n          <hr />\n          <div className=\"h3 text-truncate \">Professional Timeline</div>\n          <hr />\n          {entries.map((entry, index) => {\n            const refText =\n              entry.type !== EntryType.CERTIFICATION\n                ? entry.reference.value\n                : null;\n\n            return (\n              <Row key={index} className=\"ml-3\">\n                <Col\n                  xs={12}\n                  className=\"pb-0 border border-dark border-bottom-0 border-top-0 border-right-0\"\n                >\n                  <div className=\"leftrail-timeline-icon border p-2 border-dark\">\n                    {getIcon(entry.type)}\n                  </div>\n\n                  <p className=\"mt-2\">\n                    {new Date(entry.fromDate).toLocaleDateString()}\n                    {entry.toDate &&\n                      \" -> \".concat(\n                        new Date(entry.toDate).toLocaleDateString()\n                      )}\n                  </p>\n                  <p className=\"pl-5\">\n                    {entry.name}&nbsp;@&nbsp;\n                    {refText && (\n                      <a\n                        className=\"text-dark\"\n                        target=\"blank\"\n                        href={entry.reference.value}\n                      >\n                        {entry.entity}\n                      </a>\n                    )}\n                    {!refText && (\n                      <>\n                        {entry.entity}\n                        &nbsp;&nbsp;\n                        <a\n                          className=\"text-dark\"\n                          target=\"blank\"\n                          href={entry.reference.value}\n                        >\n                          Reference\n                        </a>\n                      </>\n                    )}\n                  </p>\n                  <p className=\"pl-4\">{entry.description.value}</p>\n                </Col>\n                <Col\n                  className=\"pb-0 border border-dark border-bottom-0 border-top-0 border-right-0\"\n                  xs={2}\n                ></Col>\n                <Col xs={8}>\n                  <hr />\n                </Col>\n                <Col xs={2}></Col>\n              </Row>\n            );\n          })}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default LeftRailResume;\n","import React from \"react\";\nimport \"./Header.css\";\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFirstdraft, faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport {\n  faBriefcase,\n  faFilePdf,\n  faInfoCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\n\nexport type HeaderProps = {\n  format: string;\n};\n\nconst Header = ({ format }: HeaderProps) => {\n  return (\n    <Navbar fixed=\"top\" bg=\"light\" expand=\"lg\">\n      <Navbar.Brand href=\"#home\">Résumé{process.env.PUBLIC_URL}</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse className=\"justify-content-end\">\n        <Nav className=\"me-auto\">\n          <NavDropdown\n            title={\n              <>\n                <FontAwesomeIcon icon={faFirstdraft} />\n                &nbsp;&nbsp;Styles\n              </>\n            }\n            id=\"navbarScrollingDropdown\"\n          >\n            <NavDropdown.Item href=\"flat\">\n              <Link className=\"text-decoration-none text-dark\" to=\"/flat\">\n                Flat\n              </Link>\n            </NavDropdown.Item>\n            <NavDropdown.Item href=\"colorful\">\n              <Link className=\"text-decoration-none text-dark\" to=\"/colorful\">\n                Colorful\n              </Link>\n            </NavDropdown.Item>\n            <NavDropdown.Item href=\"leftrail\">\n              <Link className=\"text-decoration-none text-dark\" to=\"/leftrail\">\n                Left Rail\n              </Link>\n            </NavDropdown.Item>\n            <NavDropdown.Item href=\"compact\">\n              <Link className=\"text-decoration-none text-dark\" to=\"/compact\">\n                Compact\n              </Link>\n            </NavDropdown.Item>\n          </NavDropdown>\n          {format && (\n            <Nav.Item className=\"mt-2 text-secondary\">\n              <FontAwesomeIcon icon={faFilePdf} />\n              &nbsp;&nbsp;\n              <Link\n                target=\"_blank\"\n                className=\"text-decoration-none text-dark\"\n                to={format}\n              >\n                PDF\n              </Link>\n            </Nav.Item>\n          )}\n          <Nav.Link\n            target=\"_blank\"\n            href=\"https://github.com/jorgeamadosoria/info-page\"\n          >\n            <FontAwesomeIcon icon={faGithub} />\n            &nbsp;&nbsp;Repo\n          </Nav.Link>\n          <Nav.Link\n            target=\"_blank\"\n            href=\"https://portfolio-jasr.herokuapp.com/\"\n          >\n            <FontAwesomeIcon icon={faBriefcase} />\n            &nbsp;&nbsp;Portfolio\n          </Nav.Link>\n\n          <Nav.Link href=\"#about\">\n            <Link className=\"text-decoration-none text-dark\" to=\"/about\">\n              <FontAwesomeIcon icon={faInfoCircle} />\n              &nbsp;&nbsp;About\n            </Link>\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","import Relevance, { getRelevance } from \"./enums/Relevance\";\nclass Contact {\n  type: string = \"\";\n  name: string = \"\";\n  url: string = \"\";\n  relevance: Relevance = Relevance.TRIVIAL;\n\n  constructor(json: any) {\n    if (json) {\n      this.name = json.name;\n      this.type = json.type;\n      this.url = json.url;\n      this.relevance = getRelevance(json.relevance);\n    }\n  }\n}\n\nexport default Contact;\n","import Relevance, { getRelevance } from \"./enums/Relevance\";\nimport SkillType, { getSkillType } from \"./enums/SkillType\";\nclass Skill {\n  name: string = \"\";\n  level: SkillType = SkillType.OTHER;\n  relevance: Relevance = Relevance.TRIVIAL;\n  constructor(json: any) {\n    if (json) {\n      this.name = json.name;\n      this.level = getSkillType(json.level);\n      this.relevance = getRelevance(json.relevance);\n    }\n  }\n\n  private static levelNumber = (level: SkillType) => {\n    switch (level) {\n      case SkillType.PRO:\n        return 3;\n      case SkillType.INTERMEDIATE:\n        return 2;\n      case SkillType.BEGINNER:\n        return 1;\n      default:\n        return 0;\n    }\n  };\n  static sort = (e1: Skill, e2: Skill): number => {\n    return Skill.levelNumber(e2.level) - Skill.levelNumber(e1.level);\n  };\n}\n\nexport default Skill;\n","import Relevance, { getRelevance } from \"./enums/Relevance\";\n\nclass Datum {\n  value: string = \"\";\n  relevance: Relevance = Relevance.TRIVIAL;\n  constructor(json: any) {\n    if (json) {\n      this.value = json.value;\n      this.relevance = getRelevance(json.relevance);\n    }\n  }\n\n  clear(relevance: Relevance): boolean {\n    this.value = this.relevance > relevance ? \"\" : this.value;\n    return this.value !== null;\n  }\n}\n\nexport default Datum;\n","import Datum from \"./Datum\";\nimport EntryType, { getEntryType } from \"./enums/EntryType\";\nimport Relevance, { getRelevance } from \"./enums/Relevance\";\n\nclass Entry {\n  fromDate: Date = new Date();\n  toDate: Date | null = new Date();\n  name: string = \"\";\n  entity: string = \"\";\n  reference: Datum = new Datum(null);\n  description: Datum = new Datum(null);\n  type: EntryType = EntryType.OTHER;\n  relevance: Relevance = Relevance.TRIVIAL;\n  constructor(json: any) {\n    if (json) {\n      this.fromDate = new Date(json.fromDate.replace(/-/g, \"/\"));\n      this.toDate = json.toDate\n        ? new Date(json.toDate.replace(/-/g, \"/\"))\n        : null;\n      this.name = json.name;\n      this.entity = json.entity;\n      this.reference = new Datum(json.reference);\n      this.description = new Datum(json.description);\n      this.type = getEntryType(json.type);\n      this.relevance = getRelevance(json.relevance);\n    }\n  }\n\n  filter = (relevance: Relevance): Entry => {\n    this.description.clear(relevance);\n    this.reference.clear(relevance);\n    return this;\n  };\n\n  static sort = (e1: Entry, e2: Entry): number => {\n    return e2.fromDate.getTime() === e1.fromDate.getTime()\n      ? 0\n      : Math.sign(e2.fromDate.getTime() - e1.fromDate.getTime());\n  };\n}\n\nexport default Entry;\n","import Relevance, { getRelevance } from \"./enums/Relevance\";\nimport ShowCaseType, { getShowCaseType } from \"./enums/ShowCaseType\";\nclass Showcase {\n  url: string = \"\";\n  name: string = \"\";\n  description: string = \"\";\n  language: string = \"\";\n  type: ShowCaseType = ShowCaseType.WEB;\n  relevance: Relevance = Relevance.TRIVIAL;\n  constructor(json: any) {\n    if (json) {\n      this.url = json.url;\n      this.name = json.name;\n      this.description = json.description;\n      this.language = json.language;\n      this.type = getShowCaseType(json.type);\n      this.relevance = getRelevance(json.relevance);\n    }\n  }\n}\n\nexport default Showcase;\n","import Contact from \"./Contact\";\nimport Language from \"./Language\";\nimport Skill from \"./Skill\";\nimport Entry from \"./Entry\";\nimport Relevance, { compare } from \"./enums/Relevance\";\nimport Datum from \"./Datum\";\nimport Showcase from \"./Showcase\";\n\nclass Resume {\n  name: Datum = new Datum(null);\n  positions: Array<Datum> = new Array<Datum>();\n  summary: Datum = new Datum(null);\n  showcase: Array<Showcase> = new Array<Showcase>();\n  contacts: Array<Contact> = new Array<Contact>();\n  languages: Array<Language> = new Array<Language>();\n  skills: Array<Skill> = new Array<Skill>();\n  entries: Array<Entry> = new Array<Entry>();\n  format: string = \"\";\n  constructor(json?: any) {\n    this.format = \"flat\";\n    if (json) {\n      this.name = new Datum(json.name);\n      this.positions = json.positions.map((e: any) => new Datum(e));\n      this.summary = new Datum(json.summary);\n      this.showcase = json.showcase.map((e: any) => new Showcase(e));\n      this.contacts = json.contacts.map((e: any) => new Contact(e));\n      this.languages = json.languages.map((e: any) => new Language(e));\n      this.skills = json.skills.map((e: any) => new Skill(e));\n      this.entries = json.entries.map((e: any) => new Entry(e));\n    }\n  }\n\n  prepareResume(relevance: Relevance = Relevance.TRIVIAL): Resume {\n    const filterRelevance = (e: any) => compare(e.relevance, relevance);\n    var resume = new Resume();\n    resume.name = this.name;\n    resume.summary = this.summary;\n\n    resume.name.clear(relevance);\n    resume.positions = this.positions.filter(filterRelevance);\n    resume.summary.clear(relevance);\n    resume.showcase = this.showcase.filter(filterRelevance);\n    resume.contacts = this.contacts.filter(filterRelevance);\n    resume.languages = this.languages\n      .filter(filterRelevance)\n      .sort(Language.sort);\n    resume.skills = this.skills.filter(filterRelevance).sort(Skill.sort);\n    resume.entries = this.entries\n      .filter(filterRelevance) //filters the entries array\n      .map((e) => e.filter(relevance)) // filters the datums inside each entry\n      .sort(Entry.sort);\n    resume.format = \"flat\";\n    return resume;\n  }\n}\n\nexport default Resume;\n","import { Svg, Path } from \"@react-pdf/renderer\";\nimport SocialType from \"../../data/enums/SocialType\";\nimport EntryType from \"../../data/enums/EntryType\";\nimport ShowCaseType from \"../../data/enums/ShowCaseType\";\nimport IconColor from \"../../data/enums/IconColor\";\n\nexport const bgEnum = (type: string) => {\n  switch (type) {\n    case EntryType.WORK:\n      return bg(\"#DFE7FD\");\n    case EntryType.EDUCATION:\n      return bg(\"#E2ECE9\");\n    case EntryType.VOLUNTEERING:\n      return bg(\"#FDE2E4\");\n    case EntryType.CERTIFICATION:\n      return bg(\"#FFF1E6\");\n    case ShowCaseType.WEB:\n    case ShowCaseType.APP:\n      return bg(\"#ffd1c2\");\n  }\n  return bg(\"white\");\n};\n\nexport const getIcon = (name: String, color: IconColor = IconColor.BLACK) => {\n  var path = null;\n  switch (name) {\n    case \"portfolio\":\n      path = (\n        <Path\n          fill={color === IconColor.COLOR ? \"#ffd1c2\" : color}\n          d=\"M320 336c0 8.84-7.16 16-16 16h-96c-8.84 0-16-7.16-16-16v-48H0v144c0 25.6 22.4 48 48 48h416c25.6 0 48-22.4 48-48V288H320v48zm144-208h-80V80c0-25.6-22.4-48-48-48H176c-25.6 0-48 22.4-48 48v48H48c-25.6 0-48 22.4-48 48v80h512v-80c0-25.6-22.4-48-48-48zm-144 0H192V96h128v32z\"\n        ></Path>\n      );\n      break;\n    case ShowCaseType.WEB:\n      path = (\n        <Path\n          fill={color === IconColor.COLOR ? \"#601700\" : color}\n          d=\"M336.5 160C322 70.7 287.8 8 248 8s-74 62.7-88.5 152h177zM152 256c0 22.2 1.2 43.5 3.3 64h185.3c2.1-20.5 3.3-41.8 3.3-64s-1.2-43.5-3.3-64H155.3c-2.1 20.5-3.3 41.8-3.3 64zm324.7-96c-28.6-67.9-86.5-120.4-158-141.6 24.4 33.8 41.2 84.7 50 141.6h108zM177.2 18.4C105.8 39.6 47.8 92.1 19.3 160h108c8.7-56.9 25.5-107.8 49.9-141.6zM487.4 192H372.7c2.1 21 3.3 42.5 3.3 64s-1.2 43-3.3 64h114.6c5.5-20.5 8.6-41.8 8.6-64s-3.1-43.5-8.5-64zM120 256c0-21.5 1.2-43 3.3-64H8.6C3.2 212.5 0 233.8 0 256s3.2 43.5 8.6 64h114.6c-2-21-3.2-42.5-3.2-64zm39.5 96c14.5 89.3 48.7 152 88.5 152s74-62.7 88.5-152h-177zm159.3 141.6c71.4-21.2 129.4-73.7 158-141.6h-108c-8.8 56.9-25.6 107.8-50 141.6zM19.3 352c28.6 67.9 86.5 120.4 158 141.6-24.4-33.8-41.2-84.7-50-141.6h-108z\"\n        ></Path>\n      );\n      break;\n    case ShowCaseType.APP:\n      path = (\n        <Path\n          fill={color === IconColor.COLOR ? \"#601700\" : color}\n          d=\"M272 0H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h224c26.5 0 48-21.5 48-48V48c0-26.5-21.5-48-48-48zM160 480c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm112-108c0 6.6-5.4 12-12 12H60c-6.6 0-12-5.4-12-12V60c0-6.6 5.4-12 12-12h200c6.6 0 12 5.4 12 12v312z\"\n        ></Path>\n      );\n      break;\n    case \"residence\":\n      path = (\n        <Path\n          fill={color === IconColor.COLOR ? \"#ea4335\" : color}\n          d=\"M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z\"\n        ></Path>\n      );\n      break;\n    case \"phone\":\n      path = (\n        <Path\n          fill={color === IconColor.COLOR ? \"#25d366\" : color}\n          d=\"M380.9 97.1C339 55.1 283.2 32 223.9 32c-122.4 0-222 99.6-222 222 0 39.1 10.2 77.3 29.6 111L0 480l117.7-30.9c32.4 17.7 68.9 27 106.1 27h.1c122.3 0 224.1-99.6 224.1-222 0-59.3-25.2-115-67.1-157zm-157 341.6c-33.2 0-65.7-8.9-94-25.7l-6.7-4-69.8 18.3L72 359.2l-4.4-7c-18.5-29.4-28.2-63.3-28.2-98.2 0-101.7 82.8-184.5 184.6-184.5 49.3 0 95.6 19.2 130.4 54.1 34.8 34.9 56.2 81.2 56.1 130.5 0 101.8-84.9 184.6-186.6 184.6zm101.2-138.2c-5.5-2.8-32.8-16.2-37.9-18-5.1-1.9-8.8-2.8-12.5 2.8-3.7 5.6-14.3 18-17.6 21.8-3.2 3.7-6.5 4.2-12 1.4-32.6-16.3-54-29.1-75.5-66-5.7-9.8 5.7-9.1 16.3-30.3 1.8-3.7.9-6.9-.5-9.7-1.4-2.8-12.5-30.1-17.1-41.2-4.5-10.8-9.1-9.3-12.5-9.5-3.2-.2-6.9-.2-10.6-.2-3.7 0-9.7 1.4-14.8 6.9-5.1 5.6-19.4 19-19.4 46.3 0 27.3 19.9 53.7 22.6 57.4 2.8 3.7 39.1 59.7 94.8 83.8 35.2 15.2 49 16.5 66.6 13.9 10.7-1.6 32.8-13.4 37.4-26.4 4.6-13 4.6-24.1 3.2-26.4-1.3-2.5-5-3.9-10.5-6.6z\"\n        ></Path>\n      );\n      break;\n    case \"email\":\n      path = (\n        <Path\n          fill={color === IconColor.COLOR ? \"#ffa930\" : color}\n          d=\"M502.3 190.8c3.9-3.1 9.7-.2 9.7 4.7V400c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V195.6c0-5 5.7-7.8 9.7-4.7 22.4 17.4 52.1 39.5 154.1 113.6 21.1 15.4 56.7 47.8 92.2 47.6 35.7.3 72-32.8 92.3-47.6 102-74.1 131.6-96.3 154-113.7zM256 320c23.2.4 56.6-29.2 73.4-41.4 132.7-96.3 142.8-104.7 173.4-128.7 5.8-4.5 9.2-11.5 9.2-18.9v-19c0-26.5-21.5-48-48-48H48C21.5 64 0 85.5 0 112v19c0 7.4 3.4 14.3 9.2 18.9 30.6 23.9 40.7 32.4 173.4 128.7 16.8 12.2 50.2 41.8 73.4 41.4z\"\n        ></Path>\n      );\n      break;\n    case SocialType.GITHUB:\n      path = (\n        <Path\n          fill={color === IconColor.COLOR ? \"#333\" : color}\n          d=\"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\"\n        ></Path>\n      );\n      break;\n    case SocialType.FACEBOOK:\n      path = (\n        <Path\n          fill={color === IconColor.COLOR ? \"#3b5998\" : color}\n          d=\"M504 256C504 119 393 8 256 8S8 119 8 256c0 123.78 90.69 226.38 209.25 245V327.69h-63V256h63v-54.64c0-62.15 37-96.48 93.67-96.48 27.14 0 55.52 4.84 55.52 4.84v61h-31.28c-30.8 0-40.41 19.12-40.41 38.73V256h68.78l-11 71.69h-57.78V501C413.31 482.38 504 379.78 504 256z\"\n        ></Path>\n      );\n      break;\n    case SocialType.LINKEDIN:\n      path = (\n        <Path\n          fill={color === IconColor.COLOR ? \"#00a0dc\" : color}\n          d=\"M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z\"\n        ></Path>\n      );\n      break;\n    case EntryType.WORK:\n      path = (\n        <Path\n          fill={color === IconColor.COLOR ? \"#7094F9\" : color}\n          d=\"M320 336c0 8.84-7.16 16-16 16h-96c-8.84 0-16-7.16-16-16v-48H0v144c0 25.6 22.4 48 48 48h416c25.6 0 48-22.4 48-48V288H320v48zm144-208h-80V80c0-25.6-22.4-48-48-48H176c-25.6 0-48 22.4-48 48v48H48c-25.6 0-48 22.4-48 48v80h512v-80c0-25.6-22.4-48-48-48zm-144 0H192V96h128v32z\"\n        ></Path>\n      );\n      break;\n    case EntryType.EDUCATION:\n      path = (\n        <Path\n          fill={color === IconColor.COLOR ? \"#93B8AD\" : color}\n          d=\"M622.34 153.2L343.4 67.5c-15.2-4.67-31.6-4.67-46.79 0L17.66 153.2c-23.54 7.23-23.54 38.36 0 45.59l48.63 14.94c-10.67 13.19-17.23 29.28-17.88 46.9C38.78 266.15 32 276.11 32 288c0 10.78 5.68 19.85 13.86 25.65L20.33 428.53C18.11 438.52 25.71 448 35.94 448h56.11c10.24 0 17.84-9.48 15.62-19.47L82.14 313.65C90.32 307.85 96 298.78 96 288c0-11.57-6.47-21.25-15.66-26.87.76-15.02 8.44-28.3 20.69-36.72L296.6 284.5c9.06 2.78 26.44 6.25 46.79 0l278.95-85.7c23.55-7.24 23.55-38.36 0-45.6zM352.79 315.09c-28.53 8.76-52.84 3.92-65.59 0l-145.02-44.55L128 384c0 35.35 85.96 64 192 64s192-28.65 192-64l-14.18-113.47-145.03 44.56z\"\n        ></Path>\n      );\n      break;\n    case EntryType.VOLUNTEERING:\n      path = (\n        <Path\n          fill={color === IconColor.COLOR ? \"#F4626C\" : color}\n          d=\"M488 192H336v56c0 39.7-32.3 72-72 72s-72-32.3-72-72V126.4l-64.9 39C107.8 176.9 96 197.8 96 220.2v47.3l-80 46.2C.7 322.5-4.6 342.1 4.3 357.4l80 138.6c8.8 15.3 28.4 20.5 43.7 11.7L231.4 448H368c35.3 0 64-28.7 64-64h16c17.7 0 32-14.3 32-32v-64h8c13.3 0 24-10.7 24-24v-48c0-13.3-10.7-24-24-24zm147.7-37.4L555.7 16C546.9.7 527.3-4.5 512 4.3L408.6 64H306.4c-12 0-23.7 3.4-33.9 9.7L239 94.6c-9.4 5.8-15 16.1-15 27.1V248c0 22.1 17.9 40 40 40s40-17.9 40-40v-88h184c30.9 0 56 25.1 56 56v28.5l80-46.2c15.3-8.9 20.5-28.4 11.7-43.7z\"\n        ></Path>\n      );\n      break;\n    case EntryType.CERTIFICATION:\n      path = (\n        <Path\n          fill={color === IconColor.COLOR ? \"#FFA25B\" : color}\n          d=\"M458.622 255.92l45.985-45.005c13.708-12.977 7.316-36.039-10.664-40.339l-62.65-15.99 17.661-62.015c4.991-17.838-11.829-34.663-29.661-29.671l-61.994 17.667-15.984-62.671C337.085.197 313.765-6.276 300.99 7.228L256 53.57 211.011 7.229c-12.63-13.351-36.047-7.234-40.325 10.668l-15.984 62.671-61.995-17.667C74.87 57.907 58.056 74.738 63.046 92.572l17.661 62.015-62.65 15.99C.069 174.878-6.31 197.944 7.392 210.915l45.985 45.005-45.985 45.004c-13.708 12.977-7.316 36.039 10.664 40.339l62.65 15.99-17.661 62.015c-4.991 17.838 11.829 34.663 29.661 29.671l61.994-17.667 15.984 62.671c4.439 18.575 27.696 24.018 40.325 10.668L256 458.61l44.989 46.001c12.5 13.488 35.987 7.486 40.325-10.668l15.984-62.671 61.994 17.667c17.836 4.994 34.651-11.837 29.661-29.671l-17.661-62.015 62.65-15.99c17.987-4.302 24.366-27.367 10.664-40.339l-45.984-45.004z\"\n        ></Path>\n      );\n      break;\n  }\n  return (\n    <Svg width={18} height={18} viewBox=\"0 0 600 600\">\n      {path}\n    </Svg>\n  );\n};\n\nexport const flatStyles = (): any => {\n  return {\n    flexRow: {\n      flexDirection: \"row\",\n    },\n\n    flexGrow: {\n      flexGrow: 1,\n    },\n    flexWrap: {\n      flexWrap: \"wrap\",\n    },\n\n    alignFlexStart: {\n      alignContent: \"flex-start\",\n    },\n\n    justifySpaceBetween: { justifyContent: \"space-between\" },\n  };\n};\n\nexport const top = (value: number) => {\n  return { top: value };\n};\n\nexport const left = (value: any) => {\n  return { left: value };\n};\n\nexport const color = (value: string) => {\n  return {\n    color: value,\n  };\n};\n\nexport const bg = (value: string) => {\n  return { backgroundColor: value };\n};\n\nexport const b = (color: string, width: number = 1) => {\n  return { borderColor: color, border: width };\n};\n\nexport const bb = (color: string, width: number) => {\n  return { borderBottomColor: color, borderBottomWidth: width };\n};\n\nexport const bl = (color: string, width: number) => {\n  return { borderLeftColor: color, borderLeftWidth: width };\n};\n\nexport const bt = (color: string, width: number) => {\n  return { borderTopColor: color, borderTopWidth: width };\n};\n\nexport const br = (color: string, width: number) => {\n  return { borderRightColor: color, borderRightWidth: width };\n};\n\nexport const centerItems = () => {\n  return { alignItems: \"center\" };\n};\n\nexport const round = (radius: number = 25) => {\n  return {\n    borderTopLeftRadius: radius,\n    borderTopRightRadius: radius,\n    borderBottomRightRadius: radius,\n    borderBottomLeftRadius: radius,\n  };\n};\n\nexport const rRight = (radius: number = 25) => {\n  return {\n    borderTopRightRadius: radius,\n    borderBottomRightRadius: radius,\n  };\n};\n\nexport const pos = (value: string) => {\n  return { position: value };\n};\nexport const h = (value: number) => {\n  return { height: value };\n};\nexport const w = (value: number) => {\n  return { width: value };\n};\nexport const z = (value: number) => {\n  return { zIndex: value };\n};\nexport const p = (value: number) => {\n  return { padding: value };\n};\nexport const pt = (value: number) => {\n  return { paddingTop: value };\n};\nexport const pl = (value: number) => {\n  return { paddingLeft: value };\n};\nexport const pr = (value: number) => {\n  return { paddingRight: value };\n};\nexport const pb = (value: number) => {\n  return { paddingBottom: value };\n};\nexport const mb = (value: number) => {\n  return { marginBottom: value };\n};\nexport const mt = (value: number) => {\n  return { marginTop: value };\n};\nexport const mr = (value: number) => {\n  return { marginRight: value };\n};\nexport const fontSize = (value: number) => {\n  return { fontSize: value };\n};\nexport const ml = (value: number) => {\n  return { marginLeft: value };\n};\n\nexport const join = (...styles: any[]) => {\n  return Object.assign({}, ...styles);\n};\n","import React from \"react\";\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Link,\n  PDFViewer,\n} from \"@react-pdf/renderer\";\nimport { ResumeProps } from \"../resumes/ResumeUtils\";\nimport EntryType from \"../../data/enums/EntryType\";\nimport {\n  getIcon,\n  flatStyles,\n  mb,\n  ml,\n  mt,\n  mr,\n  fontSize,\n  join,\n  pl,\n  pr,\n  pt,\n  pb,\n  round,\n  p,\n  w,\n  pos,\n  h,\n  centerItems,\n  z,\n  bb,\n  bl,\n  bg,\n  b,\n  color,\n  left,\n  top,\n  bt,\n} from \"./PDFUtils\";\nimport { isSocialType } from \"../../data/enums/SocialType\";\nimport ShowCaseType from \"../../data/enums/ShowCaseType\";\n\n// Create styles\nconst styles = StyleSheet.create(flatStyles());\n\nconst CompactResumePDF = ({ resume, relevance }: ResumeProps) => {\n  const {\n    name,\n    positions,\n    showcase,\n    summary,\n    contacts,\n    languages,\n    skills,\n    entries,\n  } = resume.prepareResume(relevance);\n  const joinedPositions = positions\n    .map((position) => position.value)\n    .join(\", \");\n\n  return (\n    <PDFViewer width=\"100%\" height=\"1000\" style={styles.pos}>\n      <Document>\n        <Page size=\"A4\" style={join(p(15), pt(35), pb(35))}>\n          <View style={fontSize(30)}>\n            <Text>{name.value}</Text>\n            <Text style={fontSize(12)}>{joinedPositions}</Text>\n          </View>\n          <View style={join(bb(\"black\", 4), mt(4), mb(4))}></View>\n          <View style={mb(10)}>\n            <Text>{summary.value}</Text>\n          </View>\n          <View style={styles.flexRow}>\n            <View style={styles.flexGrow}>\n              {contacts.map((contact, index) => (\n                <View style={ml(24)}>\n                  <View\n                    style={join(\n                      left(-30),\n                      bg(\"white\"),\n                      pos(\"absolute\"),\n                      centerItems(),\n                      z(1000),\n                      h(30),\n                      w(30),\n                      mr(20),\n                      pt(6),\n                      pl(5)\n                    )}\n                  >\n                    {getIcon(contact.type)}\n                  </View>\n                  <Text style={join(mt(4), mb(4))} key={index}>\n                    {contact.url ? (\n                      <Link style={color(\"black\")} src={contact.url}>\n                        <Text>{contact.name}</Text>\n                        {isSocialType(contact.type) && (\n                          <Text style={fontSize(10)}>\n                            &nbsp;&nbsp;{contact.url}\n                          </Text>\n                        )}\n                      </Link>\n                    ) : (\n                      <Text>{contact.name}</Text>\n                    )}\n                  </Text>\n                </View>\n              ))}\n            </View>\n            <View style={styles.flexGrow}>\n              {languages.map((language, index) => (\n                <Text style={join(mt(4), mb(4))} key={index}>\n                  {language.code}\n                </Text>\n              ))}\n            </View>\n          </View>\n          <View style={join(bb(\"lightgrey\", 1), mt(4), mb(4))}></View>\n          <View\n            style={join(\n              styles.sectionSkillContainer,\n              styles.flexWrap,\n              styles.alignFlexStart,\n              styles.justifySpaceBetween,\n              styles.flexRow,\n              fontSize(18)\n            )}\n          >\n            {skills.map((skill, index) => (\n              <View style={w(141)} key={index}>\n                <Text>{skill.name}</Text>\n              </View>\n            ))}\n          </View>\n          <View style={join(bb(\"lightgrey\", 1), mt(4), mb(4))}></View>\n          <View style={join(bl(\"black\", 2), pl(10), pr(10), mt(5), ml(10))}>\n            {entries.map((entry, index) => {\n              return (\n                <View wrap={false} key={index}>\n                  <View\n                    style={join(\n                      left(-26),\n                      b(\"black\", 1),\n                      bg(\"white\"),\n                      centerItems(),\n                      z(1000),\n                      pos(\"absolute\"),\n                      h(30),\n                      w(30),\n                      round(),\n                      pt(6),\n                      pl(3)\n                    )}\n                  >\n                    {getIcon(entry.type)}\n                  </View>\n                  <Text style={join(mt(6), ml(10))}>\n                    {new Date(entry.fromDate).toLocaleDateString()}\n                    {entry.toDate &&\n                      \" -> \".concat(\n                        new Date(entry.toDate).toLocaleDateString()\n                      )}\n                  </Text>\n                  <Text style={ml(10)}>\n                    {entry.name}&nbsp;@&nbsp;\n                    {entry.type !== EntryType.CERTIFICATION ? (\n                      <Text style={ml(10)}>\n                        {entry.reference.value ? (\n                          <Link src={entry.reference.value}>\n                            {entry.entity}\n                          </Link>\n                        ) : (\n                          entry.entity\n                        )}\n                      </Text>\n                    ) : (\n                      <Text style={ml(10)}>{entry.entity}</Text>\n                    )}\n                  </Text>\n                  <Text style={join(ml(10), mt(2), fontSize(15))}>\n                    {entry.description.value}\n                  </Text>\n                  {entry.type === EntryType.CERTIFICATION &&\n                    entry.reference.value && (\n                      <Link\n                        style={join(\n                          color(\"black\"),\n                          ml(10),\n                          mt(2),\n                          fontSize(15)\n                        )}\n                        src={entry.reference.value}\n                      >\n                        <Text>Reference</Text>\n                      </Link>\n                    )}\n                  <View style={join(w(400), mt(6), mb(6))}></View>\n                </View>\n              );\n            })}\n          </View>\n          <View style={join(bb(\"lightgrey\", 1), mt(4), mb(4))}></View>\n          <View style={join(styles.flexRow, pl(10), pr(10), mt(5), ml(10))}>\n            {showcase.map((show, index) => (\n              <View\n                style={join(\n                  pl(1),\n                  mt(10),\n                  mb(10),\n                  w(282),\n                  pr(1),\n                  b(\"black\", 0),\n                  pt(15)\n                )}\n                key={index}\n              >\n                <Link style={color(\"black\")} src={show.url}>\n                  <Text>{show.name}</Text>\n                </Link>\n              </View>\n            ))}\n          </View>\n        </Page>\n      </Document>\n    </PDFViewer>\n  );\n};\n\nexport default CompactResumePDF;\n","import React from \"react\";\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Link,\n  PDFViewer,\n} from \"@react-pdf/renderer\";\nimport { ResumeProps } from \"../resumes/ResumeUtils\";\nimport EntryType from \"../../data/enums/EntryType\";\nimport {\n  getIcon,\n  flatStyles,\n  mb,\n  ml,\n  mt,\n  mr,\n  fontSize,\n  join,\n  pl,\n  pr,\n  pt,\n  pb,\n  round,\n  rRight,\n  p,\n  bgEnum,\n  w,\n  pos,\n  h,\n  centerItems,\n  z,\n  bb,\n  bl,\n  bg,\n  b,\n  color,\n  left,\n  top,\n} from \"./PDFUtils\";\nimport { isSocialType } from \"../../data/enums/SocialType\";\nimport ShowCaseType from \"../../data/enums/ShowCaseType\";\nimport IconColor from \"../../data/enums/IconColor\";\n\n// Create styles\nconst styles = StyleSheet.create(flatStyles());\n\nconst ColorfulResumePDF = ({ resume, relevance }: ResumeProps) => {\n  const {\n    name,\n    positions,\n    showcase,\n    summary,\n    contacts,\n    languages,\n    skills,\n    entries,\n  } = resume.prepareResume(relevance);\n  const joinedPositions = positions\n    .map((position) => position.value)\n    .join(\", \");\n\n  return (\n    <PDFViewer width=\"100%\" height=\"1000\" style={styles.pos}>\n      <Document>\n        <Page size=\"A4\">\n          <View\n            render={({ pageNumber }) =>\n              pageNumber !== 1 && <View style={join(pt(35))} />\n            }\n            fixed\n          />\n          <View\n            style={join(\n              bg(\"lightblue\"),\n              pb(5),\n              pt(20),\n              pl(15),\n              pr(15),\n              fontSize(30)\n            )}\n          >\n            <Text>{name.value}</Text>\n            <Text style={fontSize(12)}>{joinedPositions}</Text>\n          </View>\n          <View style={join(bb(\"black\", 4), mb(4))}></View>\n          <View style={join(pl(15), pr(15), mb(10))}>\n            <Text>{summary.value}</Text>\n          </View>\n          <View style={join(pl(15), pr(15), styles.flexRow)}>\n            <View style={styles.flexGrow}>\n              {contacts.map((contact, index) => (\n                <View style={ml(24)}>\n                  <View\n                    style={join(\n                      left(-30),\n                      bg(\"white\"),\n                      pos(\"absolute\"),\n                      centerItems(),\n                      z(1000),\n                      h(30),\n                      w(30),\n                      mr(20),\n                      pt(6),\n                      pl(5)\n                    )}\n                  >\n                    {getIcon(contact.type, IconColor.COLOR)}\n                  </View>\n                  <Text style={join(mt(4), mb(4))} key={index}>\n                    {contact.url ? (\n                      <Link style={color(\"black\")} src={contact.url}>\n                        <Text>{contact.name}</Text>\n                        {isSocialType(contact.type) && (\n                          <Text style={fontSize(10)}>\n                            &nbsp;&nbsp;{contact.url}\n                          </Text>\n                        )}\n                      </Link>\n                    ) : (\n                      <Text>{contact.name}</Text>\n                    )}\n                  </Text>\n                </View>\n              ))}\n            </View>\n            <View style={styles.flexGrow}>\n              {languages.map((language, index) => (\n                <View\n                  style={join(\n                    w(140),\n                    bg(\"#a7d5dd\"),\n                    round(),\n                    centerItems(),\n                    p(4),\n                    ml(4),\n                    mb(3),\n                    pl(8)\n                  )}\n                  key={index}\n                >\n                  <Text>{language.code}</Text>\n                  <Text style={fontSize(10)}>{language.level}</Text>\n                </View>\n              ))}\n            </View>\n          </View>\n          <View\n            style={join(bb(\"lightgrey\", 1), ml(15), mr(15), mt(15), mb(10))}\n          ></View>\n          <View\n            style={join(\n              pl(15),\n              pr(15),\n              styles.sectionSkillContainer,\n              styles.flexWrap,\n              styles.alignFlexStart,\n              styles.justifySpaceBetween,\n              styles.flexRow,\n              fontSize(18)\n            )}\n          >\n            {skills.map((skill, index) => (\n              <View\n                style={join(\n                  w(120),\n                  bg(\"#a7d5dd\"),\n                  round(),\n                  centerItems(),\n                  p(4),\n                  ml(4),\n                  mb(3),\n                  pl(8)\n                )}\n                key={index}\n              >\n                <Text>{skill.name}</Text>\n                <Text style={fontSize(10)}>&nbsp;({skill.level})</Text>\n              </View>\n            ))}\n          </View>\n          <View\n            style={join(bb(\"lightgrey\", 1), ml(15), mr(15), mt(15), mb(10))}\n          ></View>\n          <View style={join(bl(\"black\", 2), ml(20), pr(10), mt(5))}>\n            {entries.map((entry, index) => {\n              return (\n                <View\n                  style={join(\n                    mb(2),\n                    rRight(25),\n                    b(\"black\", 1),\n                    bl(\"black\", 0),\n                    pb(8),\n                    mb(5),\n                    bgEnum(entry.type)\n                  )}\n                  wrap={false}\n                  key={index}\n                >\n                  <View\n                    style={join(\n                      bgEnum(entry.type),\n                      left(-16),\n                      top(10),\n                      b(\"black\", 1),\n                      centerItems(),\n                      z(1000),\n                      pos(\"absolute\"),\n                      h(30),\n                      w(30),\n                      round(),\n                      pt(6),\n                      pl(3)\n                    )}\n                  >\n                    {getIcon(entry.type, IconColor.COLOR)}\n                  </View>\n                  <Text style={join(mt(6), ml(18))}>\n                    {new Date(entry.fromDate).toLocaleDateString()}\n                    {entry.toDate &&\n                      \" -> \".concat(\n                        new Date(entry.toDate).toLocaleDateString()\n                      )}\n                  </Text>\n                  <Text style={ml(18)}>\n                    {entry.name}&nbsp;@&nbsp;\n                    {entry.type !== EntryType.CERTIFICATION ? (\n                      <Text style={ml(18)}>\n                        {entry.reference.value ? (\n                          <Link src={entry.reference.value}>\n                            {entry.entity}\n                          </Link>\n                        ) : (\n                          entry.entity\n                        )}\n                      </Text>\n                    ) : (\n                      <Text style={ml(14)}>{entry.entity}</Text>\n                    )}\n                  </Text>\n                  <Text style={join(ml(18), mt(2), mr(15), fontSize(15))}>\n                    {entry.description.value}\n                  </Text>\n                  {entry.type === EntryType.CERTIFICATION &&\n                    entry.reference.value && (\n                      <Link\n                        style={join(\n                          color(\"black\"),\n                          ml(18),\n                          mt(2),\n                          fontSize(15)\n                        )}\n                        src={entry.reference.value}\n                      >\n                        <Text>Reference</Text>\n                      </Link>\n                    )}\n                </View>\n              );\n            })}\n          </View>\n          <View\n            style={join(bb(\"lightgrey\", 1), ml(15), mr(15), mt(15), mb(10))}\n          ></View>\n          <View style={join(mt(5), ml(12), mb(12))}>\n            {showcase.map((show, index) => (\n              <View\n                style={join(\n                  bgEnum(show.type),\n                  pl(1),\n                  round(10),\n                  mt(10),\n                  ml(10),\n                  mr(10),\n                  mb(10),\n                  pr(1),\n                  b(\"black\", 1),\n                  pt(15)\n                )}\n                key={index}\n              >\n                <View\n                  style={join(\n                    left(\"45%\"),\n                    top(-14),\n                    b(\"black\", 1),\n                    round(),\n                    bgEnum(show.type),\n                    pos(\"absolute\"),\n                    centerItems(),\n                    z(1000),\n                    h(30),\n                    w(30),\n                    mr(20),\n                    pl(show.type === ShowCaseType.APP ? 9 : 4),\n                    pt(6)\n                  )}\n                >\n                  {getIcon(show.type, IconColor.COLOR)}\n                </View>\n                <Link style={color(\"black\")} src={show.url}>\n                  <Text style={pl(5)}>{show.name}</Text>\n                </Link>\n                <Text style={join(pl(5), pb(5), fontSize(15))}>\n                  {show.description}\n                </Text>\n              </View>\n            ))}\n          </View>\n          <Text style={join(p(15), pb(35))} fixed />\n        </Page>\n      </Document>\n    </PDFViewer>\n  );\n};\n\nexport default ColorfulResumePDF;\n","import React from \"react\";\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Link,\n  PDFViewer,\n} from \"@react-pdf/renderer\";\nimport { ResumeProps } from \"../resumes/ResumeUtils\";\nimport EntryType from \"../../data/enums/EntryType\";\nimport {\n  getIcon,\n  flatStyles,\n  mb,\n  ml,\n  mt,\n  mr,\n  fontSize,\n  join,\n  pl,\n  pr,\n  pt,\n  pb,\n  round,\n  p,\n  w,\n  pos,\n  h,\n  centerItems,\n  z,\n  bb,\n  bl,\n  bg,\n  b,\n  color,\n  left,\n  top,\n  bt,\n} from \"./PDFUtils\";\nimport { isSocialType } from \"../../data/enums/SocialType\";\nimport ShowCaseType from \"../../data/enums/ShowCaseType\";\n\n// Create styles\nconst styles = StyleSheet.create(flatStyles());\n\nconst FlatResumePDF = ({ resume, relevance }: ResumeProps) => {\n  const {\n    name,\n    positions,\n    showcase,\n    summary,\n    contacts,\n    languages,\n    skills,\n    entries,\n  } = resume.prepareResume(relevance);\n  const joinedPositions = positions\n    .map((position) => position.value)\n    .join(\", \");\n\n  return (\n    <PDFViewer width=\"100%\" height=\"1000\" style={styles.pos}>\n      <Document>\n        <Page size=\"A4\" style={join(p(15), pt(35), pb(35))}>\n          <View style={fontSize(30)}>\n            <Text>{name.value}</Text>\n            <Text style={fontSize(12)}>{joinedPositions}</Text>\n          </View>\n          <View style={join(bb(\"black\", 4), mt(4), mb(4))}></View>\n          <View style={mb(10)}>\n            <Text>{summary.value}</Text>\n          </View>\n          <View style={styles.flexRow}>\n            <View style={styles.flexGrow}>\n              {contacts.map((contact, index) => (\n                <View style={ml(24)}>\n                  <View\n                    style={join(\n                      left(-30),\n                      bg(\"white\"),\n                      pos(\"absolute\"),\n                      centerItems(),\n                      z(1000),\n                      h(30),\n                      w(30),\n                      mr(20),\n                      pt(6),\n                      pl(5)\n                    )}\n                  >\n                    {getIcon(contact.type)}\n                  </View>\n                  <Text style={join(mt(4), mb(4))} key={index}>\n                    {contact.url ? (\n                      <Link style={color(\"black\")} src={contact.url}>\n                        <Text>{contact.name}</Text>\n                        {isSocialType(contact.type) && (\n                          <Text style={fontSize(10)}>\n                            &nbsp;&nbsp;{contact.url}\n                          </Text>\n                        )}\n                      </Link>\n                    ) : (\n                      <Text>{contact.name}</Text>\n                    )}\n                  </Text>\n                </View>\n              ))}\n            </View>\n            <View style={styles.flexGrow}>\n              {languages.map((language, index) => (\n                <Text style={join(mt(4), mb(4))} key={index}>\n                  {language.code}&nbsp;\n                  <Text style={fontSize(10)}>{language.level}</Text>\n                </Text>\n              ))}\n            </View>\n          </View>\n          <View style={join(bb(\"lightgrey\", 1), mt(4), mb(4))}></View>\n          <View\n            style={join(\n              styles.sectionSkillContainer,\n              styles.flexWrap,\n              styles.alignFlexStart,\n              styles.justifySpaceBetween,\n              styles.flexRow,\n              fontSize(18)\n            )}\n          >\n            {skills.map((skill, index) => (\n              <View style={w(181)} key={index}>\n                <Text>\n                  <Text>{skill.name}</Text>\n                  <Text style={fontSize(10)}>&nbsp;({skill.level})</Text>\n                </Text>\n              </View>\n            ))}\n          </View>\n          <View style={join(bb(\"lightgrey\", 1), mt(4), mb(4))}></View>\n          <View style={join(bl(\"black\", 2), pl(10), pr(10), mt(5), ml(10))}>\n            {entries.map((entry, index) => {\n              return (\n                <View wrap={false} key={index}>\n                  <View\n                    style={join(\n                      left(-26),\n                      b(\"black\", 1),\n                      bg(\"white\"),\n                      centerItems(),\n                      z(1000),\n                      pos(\"absolute\"),\n                      h(30),\n                      w(30),\n                      round(),\n                      pt(6),\n                      pl(3)\n                    )}\n                  >\n                    {getIcon(entry.type)}\n                  </View>\n                  <Text style={join(mt(6), ml(10))}>\n                    {new Date(entry.fromDate).toLocaleDateString()}\n                    {entry.toDate &&\n                      \" -> \".concat(\n                        new Date(entry.toDate).toLocaleDateString()\n                      )}\n                  </Text>\n                  <Text style={ml(10)}>\n                    {entry.name}&nbsp;@&nbsp;\n                    {entry.type !== EntryType.CERTIFICATION ? (\n                      <Text style={ml(10)}>\n                        {entry.reference.value ? (\n                          <Link src={entry.reference.value}>\n                            {entry.entity}\n                          </Link>\n                        ) : (\n                          entry.entity\n                        )}\n                      </Text>\n                    ) : (\n                      <Text style={ml(10)}>{entry.entity}</Text>\n                    )}\n                  </Text>\n                  <Text style={join(ml(10), mt(2), fontSize(15))}>\n                    {entry.description.value}\n                  </Text>\n                  {entry.type === EntryType.CERTIFICATION &&\n                    entry.reference.value && (\n                      <Link\n                        style={join(\n                          color(\"black\"),\n                          ml(10),\n                          mt(2),\n                          fontSize(15)\n                        )}\n                        src={entry.reference.value}\n                      >\n                        <Text>Reference</Text>\n                      </Link>\n                    )}\n                  <View style={join(w(400), mt(6), mb(6))}></View>\n                </View>\n              );\n            })}\n          </View>\n          <View style={join(bb(\"lightgrey\", 1), mt(4), mb(4))}></View>\n          <View style={join(pl(10), pr(10), mt(5), ml(10))}>\n            {showcase.map((show, index) => (\n              <View\n                style={join(\n                  pl(1),\n                  mt(10),\n                  mb(10),\n                  pr(1),\n                  b(\"black\", 0),\n                  bt(\"black\", 1),\n                  pt(15)\n                )}\n                key={index}\n              >\n                <View\n                  style={join(\n                    left(\"45%\"),\n                    top(-14),\n                    b(\"black\", 1),\n                    round(),\n                    bg(\"white\"),\n                    pos(\"absolute\"),\n                    centerItems(),\n                    z(1000),\n                    h(30),\n                    w(30),\n                    mr(20),\n                    pl(show.type === ShowCaseType.APP ? 9 : 4),\n                    pt(6)\n                  )}\n                >\n                  {getIcon(show.type)}\n                </View>\n                <Link style={color(\"black\")} src={show.url}>\n                  <Text>{show.name}</Text>\n                </Link>\n                <Text style={fontSize(15)}>{show.description}</Text>\n              </View>\n            ))}\n          </View>\n        </Page>\n      </Document>\n    </PDFViewer>\n  );\n};\n\nexport default FlatResumePDF;\n","import React from \"react\";\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Link,\n  PDFViewer,\n} from \"@react-pdf/renderer\";\nimport { ResumeProps } from \"../resumes/ResumeUtils\";\nimport EntryType from \"../../data/enums/EntryType\";\nimport IconColor from \"../../data/enums/IconColor\";\nimport {\n  getIcon,\n  flatStyles,\n  mb,\n  ml,\n  mt,\n  mr,\n  fontSize,\n  join,\n  pl,\n  pr,\n  pt,\n  pb,\n  round,\n  p,\n  w,\n  pos,\n  h,\n  centerItems,\n  z,\n  bb,\n  bl,\n  bg,\n  b,\n  color,\n  left,\n} from \"./PDFUtils\";\nimport { isSocialType } from \"../../data/enums/SocialType\";\nimport ShowCaseType from \"../../data/enums/ShowCaseType\";\n// Create styles\nconst styles = StyleSheet.create(flatStyles());\n\nconst LeftRailResumePDF = ({ resume, relevance }: ResumeProps) => {\n  const {\n    name,\n    positions,\n    showcase,\n    summary,\n    contacts,\n    languages,\n    skills,\n    entries,\n  } = resume.prepareResume(relevance);\n  const joinedPositions = positions\n    .map((position) => position.value)\n    .join(\", \");\n\n  return (\n    <PDFViewer width=\"100%\" height=\"1000\" style={styles.pos}>\n      <Document>\n        <Page size=\"A4\" style={join(styles.flexRow)}>\n          <View\n            style={join(pt(35), mr(15), h(841), bg(\"#6c757d\"), color(\"white\"))}\n          >\n            <View style={join(pl(10), pr(5))}>\n              <Text style={fontSize(18)}>{name.value}</Text>\n              <Text style={join(fontSize(10), pl(5), mb(6))}>\n                {joinedPositions}\n              </Text>\n            </View>\n            <View\n              style={join(\n                fontSize(15),\n                mt(38),\n                bg(\"black\"),\n                color(\"white\"),\n                p(4)\n              )}\n            >\n              <Text style={(mt(10), pl(5))}>Contact Info</Text>\n            </View>\n            <View>\n              {contacts.map((contact, index) => (\n                <View style={ml(32)} key={index}>\n                  <View\n                    style={join(\n                      left(-30),\n                      pos(\"absolute\"),\n                      centerItems(),\n                      z(1000),\n                      h(30),\n                      mr(20),\n                      pb(10),\n                      pt(6),\n                      pl(5)\n                    )}\n                  >\n                    {getIcon(contact.type, IconColor.WHITE)}\n                  </View>\n                  <View style={pt(5)}>\n                    {contact.url ? (\n                      <Link\n                        style={join(color(\"white\"), fontSize(12))}\n                        src={contact.url}\n                      >\n                        <Text style={color(\"white\")}>\n                          {isSocialType(contact.type)\n                            ? contact.url\n                            : contact.name}\n                        </Text>\n                      </Link>\n                    ) : (\n                      <Text style={color(\"white\")}>{contact.name}</Text>\n                    )}\n                  </View>\n                </View>\n              ))}\n            </View>\n            <View\n              style={join(\n                fontSize(15),\n                bg(\"black\"),\n                color(\"white\"),\n                mt(10),\n                p(4)\n              )}\n            >\n              <Text style={pl(5)}>Languages</Text>\n            </View>\n            <View style={ml(10)}>\n              {languages.map((language, index) => (\n                <Text style={join(fontSize(15), mt(4), mb(4))} key={index}>\n                  {language.code}&nbsp;\n                  <Text style={fontSize(10)}>{language.level}</Text>\n                </Text>\n              ))}\n            </View>\n            <View\n              style={join(\n                fontSize(15),\n                bg(\"black\"),\n                color(\"white\"),\n                pl(32),\n                p(4)\n              )}\n            >\n              <Text style={(mt(10), pl(5))}>Skills</Text>\n            </View>\n            <View\n              style={join(\n                pl(8),\n                styles.sectionSkillContainer,\n                styles.alignFlexStart,\n                styles.justifySpaceBetween\n              )}\n            >\n              {skills.map((skill, index) => (\n                <View style={join(fontSize(15), mt(4), mb(4))} key={index}>\n                  <Text>\n                    <Text>{skill.name}</Text>\n                    <Text style={fontSize(10)}>&nbsp;({skill.level})</Text>\n                  </Text>\n                </View>\n              ))}\n            </View>\n            <View\n              style={join(\n                fontSize(15),\n                bg(\"black\"),\n                color(\"white\"),\n                pl(32),\n                p(4)\n              )}\n            >\n              <Text style={(mt(10), pl(5))}>Portfolio</Text>\n            </View>\n            <View>\n              {showcase.map((show, index) => (\n                <View style={ml(32)} key={index}>\n                  <View\n                    style={join(\n                      left(-30),\n                      pos(\"absolute\"),\n                      centerItems(),\n                      z(1000),\n                      h(30),\n                      pb(10),\n                      pt(6),\n                      pl(show.type === ShowCaseType.WEB ? 5 : 7)\n                    )}\n                  >\n                    {getIcon(show.type, IconColor.WHITE)}\n                  </View>\n                  <View style={pt(5)}>\n                    <Link\n                      style={join(color(\"white\"), fontSize(12))}\n                      src={show.url}\n                    >\n                      <Text>{show.name}</Text>\n                    </Link>\n                  </View>\n                </View>\n              ))}\n            </View>\n          </View>\n\n          {/* Right rail */}\n          <View\n            style={join(pt(35), pr(5), mr(15), h(841), styles.flexGrow, ml(10))}\n          >\n            <View style={join(mt(5), mb(10))}>\n              <Text style={fontSize(12)}>{summary.value}</Text>\n            </View>\n\n            <View style={join(bb(\"lightgrey\", 1), mt(4), mb(4))}></View>\n            <View>\n              <Text style={join(fontSize(15), mt(1), mb(1))}>\n                Professional Timeline\n              </Text>\n            </View>\n            <View style={join(bb(\"lightgrey\", 1), mt(4), mb(4))}></View>\n            <View style={join(bl(\"black\", 2), pl(10), pr(10), mt(5), ml(10))}>\n              {entries.map((entry, index) => {\n                return (\n                  <View key={index}>\n                    <View\n                      style={join(\n                        left(-26),\n                        b(\"black\", 1),\n                        bg(\"white\"),\n                        centerItems(),\n                        z(1000),\n                        pos(\"absolute\"),\n                        h(30),\n                        w(30),\n                        round(),\n                        pt(6),\n                        pl(3)\n                      )}\n                    >\n                      {getIcon(entry.type)}\n                    </View>\n                    <Text style={join(fontSize(12), mt(8), ml(10), pb(10))}>\n                      {new Date(entry.fromDate).toLocaleDateString()}\n                      {entry.toDate &&\n                        \" -> \".concat(\n                          new Date(entry.toDate).toLocaleDateString()\n                        )}\n                    </Text>\n                    <Text style={join(fontSize(15), ml(10), pb(10))}>\n                      {entry.name}\n                    </Text>\n                    <Text style={join(fontSize(12), ml(10), pb(10))}>\n                      {entry.type !== EntryType.CERTIFICATION ? (\n                        <Text style={ml(10)}>\n                          {entry.reference.value ? (\n                            <Link src={entry.reference.value}>\n                              {entry.entity}\n                            </Link>\n                          ) : (\n                            entry.entity\n                          )}\n                        </Text>\n                      ) : (\n                        <Text style={ml(10)}>\n                          {entry.entity}\n                          &nbsp;&nbsp;\n                          {entry.reference.value && (\n                            <Link src={entry.reference.value}>Reference</Link>\n                          )}\n                        </Text>\n                      )}\n                    </Text>\n                    <Text style={join(ml(10), mt(2), fontSize(12))}>\n                      {entry.description.value}\n                    </Text>\n                    <View style={join(mt(6), mb(6))}></View>\n                  </View>\n                );\n              })}\n            </View>\n          </View>\n        </Page>\n      </Document>\n    </PDFViewer>\n  );\n};\n\nexport default LeftRailResumePDF;\n","import React, { useState, useEffect } from \"react\";\nimport \"./About.css\";\nimport \"react-json-pretty/themes/monikai.css\";\nimport JSONPretty from \"react-json-pretty\";\nimport { Container, Row, Col, Card, Table, Tabs, Tab } from \"react-bootstrap\";\nimport SkillType from \"../../data/enums/SkillType\";\nimport EntryType from \"../../data/enums/EntryType\";\nimport Relevance from \"../../data/enums/Relevance\";\nimport ShowCaseType from \"../../data/enums/ShowCaseType\";\nimport SocialType from \"../../data/enums/SocialType\";\nimport LanguageLevel from \"../../data/enums/LanguageLevel\";\n\ntype AboutProps = {\n  resume: any;\n};\n\nexport const About = ({ resume }: AboutProps) => {\n  const [templateState, setTemplateState] = useState({ template: null });\n  useEffect(() => {\n    fetch(\"/template.json\")\n      .then(function (response) {\n        if (!response.ok) {\n          throw Error(response.statusText);\n        }\n\n        return response.json();\n      })\n      .then((json) => {\n        setTemplateState({\n          template: json,\n        });\n      })\n      .catch(function (error) {\n        console.log(error);\n        return null;\n      });\n  }, []);\n\n  return (\n    <Container fluid>\n      <br />\n      <Tabs defaultActiveKey=\"info\" className=\"mb-3\">\n        <Tab eventKey=\"info\" tabClassName=\"text-dark\" title=\"Info\">\n          <Row>\n            <Col xs={12} lg={7} xl={8}>\n              <p>\n                A small React app to showcase my CV. It allows the selection of\n                different visual styles for HTML and PDF (detailed below). The\n                technology used is very simple, just React and Bootstrap for the\n                UI, and a json file to provide data, nothing else. The\n                application was intended as a POC to learn React, and as a live\n                CV generator for when one is needed. There is nothing\n                particularly challenging or special about the technology used,\n                it's just an useful website to have as a professional online\n                identity. A link to my{\" \"}\n                <a href=\"https://portfolio-jasr.herokuapp.com/\">\n                  portfolio website\n                </a>\n                &nbsp; is also included.\n              </p>\n            </Col>\n            <Col xs={12} lg={5} xl={4}>\n              <h5>Technologies</h5>\n              <div className=\"d-flex flex-wrap\">\n                <img\n                  className=\"about-logo-tech\"\n                  alt=\"React\"\n                  src=\"https://plone.org/events/sprints/plone-react-sprint-bonn-2018/@@download/image/1200px-React-icon.svg.png\"\n                />\n                &nbsp;&nbsp;\n                <img\n                  className=\"about-logo-tech\"\n                  alt=\"React-Pdf\"\n                  src=\"https://react-pdf.org/images/logo.png\"\n                />\n                &nbsp;&nbsp;\n                <img\n                  className=\"about-logo-tech\"\n                  alt=\"React-Bootstrap\"\n                  src=\"https://crowdcast-prod.imgix.net/-KHhIzuATU2K4OVPd2sP/event-cover-5388?w=800\"\n                />\n                &nbsp;&nbsp;\n                <img\n                  className=\"about-logo-tech\"\n                  alt=\"Bootstrap\"\n                  src=\"https://download.logo.wine/logo/Bootstrap_(front-end_framework)/Bootstrap_(front-end_framework)-Logo.wine.png\"\n                />\n                &nbsp;&nbsp;\n                <img\n                  className=\"about-logo-tech\"\n                  alt=\"Font Awesome\"\n                  src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTtO17GkRov_uk0Y6ePJ1mOEI1Qqt6eZr2wUWXdO8QoPrpiM6f5DpOFh9pcGQw8k2AohjU&usqp=CAU\"\n                />\n              </div>\n            </Col>\n          </Row>\n        </Tab>\n        <Tab eventKey=\"Styles\" tabClassName=\"text-dark\" title=\"Styles\">\n          <Row>\n            <Col>\n              The styles control the UI rendering for the Resumé data, both in\n              HTML and PDF views. This can be extended in the future. While all\n              styles are valid, not all of them present the same information (it\n              depends on the data relevance for each style) and not all of them\n              have the same intent. Read carefully and take a look at them\n              before choosing the one that suits you the most\n            </Col>\n          </Row>\n          <Row>\n            <Col sm={12} md={6} lg={4} xl={3} className=\"p-1 border-0 flex-1\">\n              <Card className=\"mx-auto h-100\">\n                <Card.Body className=\"p-0\">\n                  <Card.Header>Flat</Card.Header>\n                  <Card.Text className=\"p-3\">\n                    Standard black and white CV with full information. Your\n                    standard go to CV to show to prospective employers.\n                  </Card.Text>\n                </Card.Body>\n                <Card.Footer className=\"text-right\">\n                  <a target=\"blank\" className=\"text-dark\" href=\"flat\">\n                    HTML\n                  </a>\n                  &nbsp;&nbsp;\n                  <a target=\"blank\" className=\"text-dark\" href=\"flat-pdf\">\n                    PDF\n                  </a>\n                </Card.Footer>\n              </Card>\n            </Col>\n            <Col sm={12} md={6} lg={4} xl={3} className=\"p-1 border-0 flex-1\">\n              <Card className=\"mx-auto h-100\">\n                <Card.Body className=\"p-0\">\n                  <Card.Header>Colorful</Card.Header>\n                  <Card.Text className=\"p-3\">\n                    A flight of fancy, this format is a copy of the Flat format\n                    but with added colors and some other decorations. It's there\n                    to give a different view on how a CV can look like, but I\n                    wouldn't recommend it for serious use.\n                  </Card.Text>\n                </Card.Body>\n                <Card.Footer className=\"text-right\">\n                  <a target=\"blank\" className=\"text-dark\" href=\"colorful\">\n                    HTML\n                  </a>\n                  &nbsp;&nbsp;\n                  <a target=\"blank\" className=\"text-dark\" href=\"colorful-pdf\">\n                    PDF\n                  </a>\n                </Card.Footer>\n              </Card>\n            </Col>\n            <Col sm={12} md={6} lg={4} xl={3} className=\"p-1 border-0 flex-1\">\n              <Card className=\"mx-auto h-100\">\n                <Card.Body className=\"p-0\">\n                  <Card.Header>Left Rail</Card.Header>\n                  <Card.Text className=\"p-2\">\n                    Left rail, shades of grey. A more elegant presentation with\n                    relevant information, but not all of it. A good choice to\n                    show your work.\n                  </Card.Text>\n                </Card.Body>\n                <Card.Footer className=\"text-right\">\n                  <a target=\"blank\" className=\"text-dark\" href=\"leftrail\">\n                    HTML\n                  </a>\n                  &nbsp;&nbsp;\n                  <a target=\"blank\" className=\"text-dark\" href=\"leftrail-pdf\">\n                    PDF\n                  </a>\n                </Card.Footer>\n              </Card>\n            </Col>\n            <Col sm={12} md={6} lg={4} xl={3} className=\"p-1 border-0 flex-1\">\n              <Card className=\"mx-auto h-100\">\n                <Card.Body className=\"p-0\">\n                  <Card.Header>Compact</Card.Header>\n                  <Card.Text className=\"p-2\">\n                    The most succinct of the formats, this is a way to show just\n                    the most essential information in the smallest space\n                    possible. For the people that likes one page summaries and\n                    elevator pitches.\n                  </Card.Text>\n                </Card.Body>\n                <Card.Footer className=\"text-right\">\n                  <a target=\"blank\" className=\"text-dark\" href=\"compact\">\n                    HTML\n                  </a>\n                  &nbsp;&nbsp;\n                  <a target=\"blank\" className=\"text-dark\" href=\"compact-pdf\">\n                    PDF\n                  </a>\n                </Card.Footer>\n              </Card>\n            </Col>\n          </Row>\n        </Tab>\n        <Tab eventKey=\"contact\" tabClassName=\"text-dark\" title=\"Enums\">\n          <Row>\n            <Col xs={12}>\n              <h5>Enumerations</h5>\n              <p>\n                Valid enumeration values for the corresponding JSON properties\n                on the resume.\n              </p>\n              <Table striped bordered hover size=\"sm\">\n                <thead>\n                  <tr>\n                    <th>Enum</th>\n                    <th>Values</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>Skill</td>\n                    <td>{Object.values(SkillType).join(\", \")}</td>\n                  </tr>\n                  <tr>\n                    <td>Entry</td>\n                    <td>{Object.values(EntryType).join(\", \")}</td>\n                  </tr>\n                  <tr>\n                    <td>Relevance</td>\n                    <td>{Object.values(Relevance).join(\", \")}</td>\n                  </tr>\n                  <tr>\n                    <td>Showcase</td>\n                    <td>{Object.values(ShowCaseType).join(\", \")}</td>\n                  </tr>\n                  <tr>\n                    <td>Social</td>\n                    <td>{Object.values(SocialType).join(\", \")}</td>\n                  </tr>\n                  <tr>\n                    <td>Language</td>\n                    <td>{Object.values(LanguageLevel).join(\", \")}</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Tab>\n        <Tab eventKey=\"template\" tabClassName=\"text-dark\" title=\"Template\">\n          <Row>\n            <Col xs={12}>\n              <p>\n                JSON resumé template, with comments on each value. The relevance\n                attribute applies to all attributes in the \"datum\", the object\n                in which it exists. It can be consumed raw&nbsp;\n                <a href=\"template.json\">here</a>.\n              </p>\n              <JSONPretty data={templateState.template}></JSONPretty>;\n            </Col>\n          </Row>\n        </Tab>\n        <Tab eventKey=\"resume\" tabClassName=\"text-dark\" title=\"Resumé\">\n          <Row>\n            <Col xs={12}>\n              <p>\n                Current JSON resumé, the basis for all the styles and PDFs\n                generated by this site. It can be consumed raw&nbsp;\n                <a href=\"data.json\">here</a>.\n              </p>\n              <JSONPretty data={resume}></JSONPretty>;\n            </Col>\n          </Row>\n        </Tab>\n      </Tabs>\n    </Container>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport FlatResume from \"./components/resumes/FlatResume/FlatResume\";\nimport ColorfulResume from \"./components/resumes/ColorfulResume/ColorfulResume\";\nimport CompactResume from \"./components/resumes/CompactResume/CompactResume\";\nimport LeftRailResume from \"./components/resumes/LeftRailResume/LeftRailResume\";\n//import Header from \"./components/Header/Header\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nimport Header from \"./components/Header/Header\";\nimport Relevance from \"./data/enums/Relevance\";\nimport Resume from \"./data/Resume\";\nimport CompactResumePDF from \"./components/pdf/CompactResumePDF\";\nimport ColorfulResumePDF from \"./components/pdf/ColorfulResumePDF\";\nimport FlatResumePDF from \"./components/pdf/FlatResumePDF\";\nimport LeftRailResumePDF from \"./components/pdf/LeftRailResumePDF\";\nimport { About } from \"./components/About/About\";\n\nfunction App(props: any) {\n  const [resumeState, setResumeState] = useState({ resume: new Resume() });\n  useEffect(() => {\n    fetch(\"data.json\")\n      .then(function (response) {\n        if (!response.ok) {\n          throw Error(response.statusText);\n        }\n\n        return response.json();\n      })\n      .then((json) => {\n        setResumeState({\n          resume: new Resume(json),\n        });\n      })\n      .catch(function (error) {\n        console.log(error);\n        return null;\n      });\n  }, []);\n\n  return (\n    <Container fluid>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to=\"/flat\" />\n          </Route>\n          <Route exact path=\"/flat\">\n            <Header format=\"/flat-pdf\"></Header>\n            <div className=\"content\">\n              <FlatResume\n                resume={resumeState.resume}\n                relevance={Relevance.TRIVIAL}\n              />\n            </div>\n          </Route>\n          <Route exact path=\"/colorful\">\n            <Header format=\"colorful-pdf\"></Header>\n            <div className=\"content\">\n              <ColorfulResume\n                resume={resumeState.resume}\n                relevance={Relevance.TRIVIAL}\n              />\n            </div>\n          </Route>\n          <Route exact path=\"/leftrail\">\n            <Header format=\"leftrail-pdf\"></Header>\n            <div className=\"content\">\n              <LeftRailResume\n                resume={resumeState.resume}\n                relevance={Relevance.STANDARD}\n              />\n            </div>\n          </Route>\n          <Route exact path=\"/compact\">\n            <Header format=\"compact-pdf\"></Header>\n            <div className=\"content\">\n              <CompactResume\n                resume={resumeState.resume}\n                relevance={Relevance.ESSENTIAL}\n              />\n            </div>\n          </Route>\n          <Route exact path=\"/compact-pdf\">\n            <CompactResumePDF\n              resume={resumeState.resume}\n              relevance={Relevance.ESSENTIAL}\n            />\n          </Route>\n          <Route exact path=\"/colorful-pdf\">\n            <ColorfulResumePDF\n              resume={resumeState.resume}\n              relevance={Relevance.TRIVIAL}\n            />\n          </Route>\n          <Route exact path=\"/leftrail-pdf\">\n            <LeftRailResumePDF\n              resume={resumeState.resume}\n              relevance={Relevance.STANDARD}\n            />\n          </Route>\n          <Route exact path=\"/flat-pdf\">\n            <FlatResumePDF\n              resume={resumeState.resume}\n              relevance={Relevance.TRIVIAL}\n            />\n          </Route>\n          <Route exact path=\"/about\">\n            <Header format=\"\"></Header>\n            <div className=\"content\">\n              <About resume={resumeState.resume} />\n            </div>\n          </Route>\n        </Switch>\n      </Router>\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}